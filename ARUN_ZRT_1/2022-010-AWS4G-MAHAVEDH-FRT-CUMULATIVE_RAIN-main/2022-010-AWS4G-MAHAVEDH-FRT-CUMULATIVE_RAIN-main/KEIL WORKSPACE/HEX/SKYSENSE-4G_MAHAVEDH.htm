<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\HEX\SKYSENSE-4G_MAHAVEDH.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\HEX\SKYSENSE-4G_MAHAVEDH.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Mon Feb 06 18:33:49 2023
<BR><P>
<H3>Maximum Stack Usage =       1576 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; readconfigfile &rArr; f_open &rArr; mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[2500694]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2500568]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2500568]">NMI_Handler</a><BR>
 <LI><a href="#[250052c]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[250052c]">HardFault_Handler</a><BR>
 <LI><a href="#[25004f0]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25004f0]">MemManage_Handler</a><BR>
 <LI><a href="#[25004b4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25004b4]">BusFault_Handler</a><BR>
 <LI><a href="#[2500478]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2500478]">UsageFault_Handler</a><BR>
 <LI><a href="#[250043c]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[250043c]">SVC_Handler</a><BR>
 <LI><a href="#[2500400]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2500400]">DebugMon_Handler</a><BR>
 <LI><a href="#[25003c4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25003c4]">PendSV_Handler</a><BR>
 <LI><a href="#[250034c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[250034c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[25aed34]">send_cmd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25aed34]">send_cmd</a><BR>
 <LI><a href="#[25abf44]">get_fat</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25abff8]">move_window</a><BR>
 <LI><a href="#[25ad768]">f_read</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25ae140]">disk_read</a><BR>
 <LI><a href="#[25abf08]">put_fat</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25abff8]">move_window</a><BR>
 <LI><a href="#[25ad90c]">f_lseek</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25ae140]">disk_read</a><BR>
 <LI><a href="#[25ae0c8]">disk_ioctl</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25ae0c8]">disk_ioctl</a><BR>
 <LI><a href="#[25aec44]">vd_ioctl</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25ad81c]">f_open</a><BR>
 <LI><a href="#[25ab8b4]">putc_bfd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25ab8b4]">putc_bfd</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[25005a4]">Reset_Handler</a>
 <LI><a href="#[2500568]">NMI_Handler</a>
 <LI><a href="#[250052c]">HardFault_Handler</a>
 <LI><a href="#[25004f0]">MemManage_Handler</a>
 <LI><a href="#[25004b4]">BusFault_Handler</a>
 <LI><a href="#[2500478]">UsageFault_Handler</a>
 <LI><a href="#[250043c]">SVC_Handler</a>
 <LI><a href="#[2500400]">DebugMon_Handler</a>
 <LI><a href="#[25003c4]">PendSV_Handler</a>
 <LI><a href="#[24f23b4]">SysTick_Handler</a>
 <LI><a href="#[24ffb54]">WDT_IRQHandler</a>
 <LI><a href="#[24ffdac]">TIMER0_IRQHandler</a>
 <LI><a href="#[24ffd70]">TIMER1_IRQHandler</a>
 <LI><a href="#[24ffd34]">TIMER2_IRQHandler</a>
 <LI><a href="#[24ffcf8]">TIMER3_IRQHandler</a>
 <LI><a href="#[24f57f8]">UART0_IRQHandler</a>
 <LI><a href="#[24f5834]">UART1_IRQHandler</a>
 <LI><a href="#[24ffc44]">UART2_IRQHandler</a>
 <LI><a href="#[24f57bc]">UART3_IRQHandler</a>
 <LI><a href="#[24fff50]">PWM1_IRQHandler</a>
 <LI><a href="#[25000f4]">I2C0_IRQHandler</a>
 <LI><a href="#[25000b8]">I2C1_IRQHandler</a>
 <LI><a href="#[250007c]">I2C2_IRQHandler</a>
 <LI><a href="#[24ffe60]">SPI_IRQHandler</a>
 <LI><a href="#[24ffe24]">SSP0_IRQHandler</a>
 <LI><a href="#[24ffde8]">SSP1_IRQHandler</a>
 <LI><a href="#[24fffc8]">PLL0_IRQHandler</a>
 <LI><a href="#[24f6d88]">RTC_IRQHandler</a>
 <LI><a href="#[24fcb48]">EINT0_IRQHandler</a>
 <LI><a href="#[24fcb0c]">EINT1_IRQHandler</a>
 <LI><a href="#[24fcad0]">EINT2_IRQHandler</a>
 <LI><a href="#[24fca94]">EINT3_IRQHandler</a>
 <LI><a href="#[250034c]">ADC_IRQHandler</a>
 <LI><a href="#[25af784]">BOD_IRQHandler</a>
 <LI><a href="#[24ffb90]">USB_IRQHandler</a>
 <LI><a href="#[2500298]">CAN_IRQHandler</a>
 <LI><a href="#[250025c]">DMA_IRQHandler</a>
 <LI><a href="#[2500040]">I2S_IRQHandler</a>
 <LI><a href="#[2500130]">ENET_IRQHandler</a>
 <LI><a href="#[24ffed8]">RIT_IRQHandler</a>
 <LI><a href="#[2500004]">MCPWM_IRQHandler</a>
 <LI><a href="#[24fff14]">QEI_IRQHandler</a>
 <LI><a href="#[24fff8c]">PLL1_IRQHandler</a>
 <LI><a href="#[24ffbcc]">USBActivity_IRQHandler</a>
 <LI><a href="#[25002d4]">CANActivity_IRQHandler</a>
 <LI><a href="#[25a83f8]">__main</a>
 <LI><a href="#[24f9b78]">myExtIntrIsr_1</a>
 <LI><a href="#[25a43fc]">_sputc</a>
 <LI><a href="#[25a4564]">_printf_input_char</a>
 <LI><a href="#[323f5e0]">_get_lc_ctype</a>
 <LI><a href="#[323c28c]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25a83f8]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[25a4d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[3239be0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3239be0]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[25a83f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3239ba4]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a4d5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[3239b68]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3239b2c]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3239d0c]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[3239cd0]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[3239988]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[25a967c]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25aa270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[25a95c8]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25a9b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[25a985c]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25a42d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[25a976c]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25a4294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[25a41a4]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[323f040]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25a1eb8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[323de70]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[323dd44]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000B))
<BR><BR>[Calls]<UL><LI><a href="#[323f8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[323dd80]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[323ddf8]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[323dccc]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[323dc90]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[323f5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[323d63c]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[323d6b4]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[323da74]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[323d90c]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[323d54c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[323d5c4]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[323d984]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[323d894]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[323dc54]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[323dbdc]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[323db64]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[323daec]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[323d510]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[323d9fc]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[323d81c]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[323c5d4]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[323ce08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[323b968]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[323b788]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[323b74c]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[323b8b4]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[323ba1c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[323b83c]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[25a4d5c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[25a83f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[3239ba4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[25a1f6c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[25a1be8]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[25a1120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[25a1eb8]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[323f040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[25a1ef4]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[25a1e04]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 1576 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; readconfigfile &rArr; f_open &rArr; mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[323f43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[25a1e40]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[323eadc]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[323f43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[323ce08]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[323c5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[323ce44]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[323cdcc]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[323cac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[25005a4]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2500568]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2500568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2500568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[250052c]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[250052c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[250052c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25004f0]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25004f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25004f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25004b4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25004b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25004b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2500478]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2500478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2500478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[250043c]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[250043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[250043c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2500400]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2500400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2500400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25003c4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25003c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25003c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[250034c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[250034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[250034c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25002d4]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2500298]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[250025c]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2500130]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25000f4]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25000b8]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[250007c]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2500040]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2500004]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24fffc8]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24fff8c]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24fff50]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24fff14]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffed8]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffe60]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffe24]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffde8]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffdac]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffd70]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffd34]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffcf8]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffc44]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffbcc]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffb90]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24ffb54]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2500694]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25a1120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[24ff2a8]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, system_lpc17xx.o(.text), UNUSED)

<P><STRONG><a name="[24ff26c]"></a>SystemInit</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24fe060]"></a>ADC_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24fea74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_GetPclk
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[24fe024]"></a>ADC_GetAdcValue</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdf34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
<LI><a href="#[24fdf70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
</UL>

<P><STRONG><a name="[24fdfe8]"></a>Read_ADCchannels</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[24fe024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetAdcValue
<LI><a href="#[25a6df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a7390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[25a79a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25ad18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
</UL>

<P><STRONG><a name="[24fd8e0]"></a>reverse</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, convert.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24fd8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intToStr
</UL>

<P><STRONG><a name="[24fd8a4]"></a>intToStr</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, convert.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fd8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse
</UL>
<BR>[Called By]<UL><LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
</UL>

<P><STRONG><a name="[24fd868]"></a>ftoa</STRONG> (Thumb, 154 bytes, Stack size 72 bytes, convert.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fd8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intToStr
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a5e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[25a6328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[25a69f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[25a6df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a7390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24fa514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[24fa550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
</UL>

<P><STRONG><a name="[24fd82c]"></a>ascii_integer</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, convert.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25add80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_time_date
<LI><a href="#[25adeac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_date_time
</UL>

<P><STRONG><a name="[24fd7f0]"></a>stof</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, convert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = stof &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[25a5b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[25a5e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[25a66e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[25a6aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
</UL>

<P><STRONG><a name="[24fdd90]"></a>ftoa_signed</STRONG> (Thumb, 470 bytes, Stack size 64 bytes, convert.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a5b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[25a5c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[25a5e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[25a6328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[25a6508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[25a66e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[25a69f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[24f3584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_ATRHSamples
<LI><a href="#[24f4574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
</UL>

<P><STRONG><a name="[24fdf70]"></a>DELAY_us</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f878c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendDataSignals
<LI><a href="#[24f87c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
<LI><a href="#[24f8804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24f88b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendCmdSignals
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[24fe024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetAdcValue
</UL>

<P><STRONG><a name="[24fdfac]"></a>DELAY_ms</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DELAY_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[24fdf70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
</UL>
<BR>[Called By]<UL><LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f4664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[24f46a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefault_WindSensor
<LI><a href="#[24f46dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[24f82a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollMessage
<LI><a href="#[24f83cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[24f87c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
<LI><a href="#[24f8804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f98e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[24f9920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Wait_for_Msg
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[24f9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[24f9e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[24f9ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24f9fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24fa190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[24fa280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24fa2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PowerOff
<LI><a href="#[24fa334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fa424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
<LI><a href="#[24fd214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_sec
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[24fd214]"></a>DELAY_sec</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, delay.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>

<P><STRONG><a name="[24fcbc0]"></a>EINT_AttachInterrupt</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, extintr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdf34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
</UL>

<P><STRONG><a name="[24fcb84]"></a>EINT_DetachInterrupt</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdf34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
</UL>

<P><STRONG><a name="[24fcb48]"></a>EINT0_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24fcb0c]"></a>EINT1_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24fcad0]"></a>EINT2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24fca94]"></a>EINT3_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24fdf34]"></a>GPIO_PinFunction</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[24f599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24fcb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT_DetachInterrupt
<LI><a href="#[24fcbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT_AttachInterrupt
<LI><a href="#[24fe024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetAdcValue
<LI><a href="#[25ac958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
</UL>

<P><STRONG><a name="[24fc710]"></a>GPIO_PinDirection</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetUp
<LI><a href="#[24f8804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[25ac958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
</UL>

<P><STRONG><a name="[24fc6d4]"></a>GPIO_PinWrite</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[24f4664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[24f46a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefault_WindSensor
<LI><a href="#[24f46dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[24f878c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendDataSignals
<LI><a href="#[24f8804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24f8840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendLowerNibble
<LI><a href="#[24f887c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendHigherNibble
<LI><a href="#[24f88b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendCmdSignals
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[24f9e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[24f9ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[24fa280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
</UL>

<P><STRONG><a name="[24fc698]"></a>GPIO_PinToggle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[24fc65c]"></a>GPIO_PinRead</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
</UL>

<P><STRONG><a name="[24fc620]"></a>set_ResistorMode</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = set_ResistorMode
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
</UL>

<P><STRONG><a name="[24fc5e4]"></a>set_OpenDrainMode</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_OpenDrainMode
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
</UL>

<P><STRONG><a name="[24fa58c]"></a>myExtIntrIsr_3</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gprs.o(.text), UNUSED)

<P><STRONG><a name="[24fa550]"></a>_24hr_RainFall</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f94ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteGPREG
<LI><a href="#[24f9524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadGPREG
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a6df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24fa514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
</UL>

<P><STRONG><a name="[24fa514]"></a>calcRainFall</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fa550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a72dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24fa4d8]"></a>Yearly_Rain</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f94ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteGPREG
<LI><a href="#[24f9524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadGPREG
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a6df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[24fa49c]"></a>rtc_1call</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f94ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteGPREG
<LI><a href="#[24f9560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetFullTime
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
</UL>

<P><STRONG><a name="[24fa460]"></a>rtc_2call</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = rtc_2call &rArr; UART_Printf &rArr; UART_TxFloatNumber &rArr; UART_TxNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f94ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteGPREG
<LI><a href="#[24f9524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadGPREG
<LI><a href="#[24f9560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetFullTime
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a6508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[25a6df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24fa424]"></a>Read_Response</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25a8ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[24fa3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Read_Response
</UL>

<P><STRONG><a name="[24fa3e8]"></a>Start_Read_Response</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Start_Read_Response &rArr; Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[24fa424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
</UL>
<BR>[Called By]<UL><LI><a href="#[24fa334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[24fa3ac]"></a>Buffer_Flush</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buffer_Flush
</UL>
<BR>[Calls]<UL><LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[24fa334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[24fa370]"></a>WaitForExpectedResponse</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WaitForExpectedResponse &rArr; Start_Read_Response &rArr; Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[24fa3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush
<LI><a href="#[24fa3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Read_Response
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a90a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[24f97f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SMSC_Number
<LI><a href="#[24f98e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[24f995c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSDefaultSetting
<LI><a href="#[24f9a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[24f9b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Delete
<LI><a href="#[24f9b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Delete_All_Msg
<LI><a href="#[24f9bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_QIState
<LI><a href="#[24f9c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[24f9c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerON
<LI><a href="#[24f9d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
<LI><a href="#[24f9dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[24f9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
<LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24fa190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[24fa208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerOff
<LI><a href="#[24fa244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PDP_Activation
<LI><a href="#[24fa280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24fa2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PowerOff
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
</UL>

<P><STRONG><a name="[24fa334]"></a>WaitForStatus200_302</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fa3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush
<LI><a href="#[24fa3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Read_Response
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a90a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
</UL>

<P><STRONG><a name="[24fa2f8]"></a>SendATandExpectResponse</STRONG> (Thumb, 492 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[24f9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24f9fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24fa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24fa190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
</UL>

<P><STRONG><a name="[24fa2bc]"></a>Module_PowerOff</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Module_PowerOff &rArr; WaitForExpectedResponse &rArr; Start_Read_Response &rArr; Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
</UL>

<P><STRONG><a name="[24fa280]"></a>Module_sleep_mode</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Module_sleep_mode &rArr; WaitForExpectedResponse &rArr; Start_Read_Response &rArr; Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24fa244]"></a>Module_PDP_Activation</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
</UL>

<P><STRONG><a name="[24fa208]"></a>GNSS_PowerOff</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
</UL>

<P><STRONG><a name="[24fa1cc]"></a>ReadNavigation</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
</UL>

<P><STRONG><a name="[24fa190]"></a>GNSS_Connect</STRONG> (Thumb, 524 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24f9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
</UL>

<P><STRONG><a name="[24fa154]"></a>Module_deactivateBearerProfile</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24fa118]"></a>MODEMGetAPN</STRONG> (Thumb, 470 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a90a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
</UL>

<P><STRONG><a name="[24fa0dc]"></a>MODEMGetSignalStrength</STRONG> (Thumb, 1570 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[25a92bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24fa0a0]"></a>Query_NetworkRegistration</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
</UL>

<P><STRONG><a name="[24fa064]"></a>modemCheck_initialization</STRONG> (Thumb, 360 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24fa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24fa028]"></a>Wait_Till_SimModule_Communication</STRONG> (Thumb, 766 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
</UL>

<P><STRONG><a name="[24f9fec]"></a>Query_Sim_Insert</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
</UL>

<P><STRONG><a name="[24f9fb0]"></a>MODEMGetIMEI</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
</UL>

<P><STRONG><a name="[24f9f74]"></a>MODEM_CheckAttention</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f9fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
</UL>

<P><STRONG><a name="[24f9f38]"></a>modem_initialization</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24fa190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
</UL>

<P><STRONG><a name="[24f9efc]"></a>Module_Initializing</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_EnableBuffer_Interrupt
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24fa190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[24fa208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerOff
<LI><a href="#[24fa244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PDP_Activation
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f9ec0]"></a>RestartModule</STRONG> (Thumb, 640 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RestartModule &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f9e84]"></a>ShutDownModule</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ShutDownModule &rArr; Module_PowerOff &rArr; WaitForExpectedResponse &rArr; Start_Read_Response &rArr; Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PowerOff
<LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f9e48]"></a>Module_awakeup_mode</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[24f9ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f9e0c]"></a>MODEM_SetPhoneFunctionality</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
</UL>

<P><STRONG><a name="[24f9dd0]"></a>Query_Set_CLTS</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f9d94]"></a>Update_RTC</STRONG> (Thumb, 302 bytes, Stack size 88 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f94e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDateTime
<LI><a href="#[24fd82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
</UL>

<P><STRONG><a name="[24f9d58]"></a>MODEM_GetNetworkTime</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f9d1c]"></a>GNSS_PowerON</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[24f9ce0]"></a>Query_GPRSRegistrationStatus</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>

<P><STRONG><a name="[24f9ca4]"></a>HTTP_Post</STRONG> (Thumb, 1612 bytes, Stack size 80 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[24f9e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[24f9ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fa334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25a90a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
</UL>

<P><STRONG><a name="[24f9c68]"></a>HTTP_SetURL</STRONG> (Thumb, 720 bytes, Stack size 40 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
</UL>

<P><STRONG><a name="[24f9c2c]"></a>Check_LocalIP</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f9bf0]"></a>PackOffLog</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f9c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[24f9c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[24f9bb4]"></a>Check_QIState</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f9b78]"></a>myExtIntrIsr_1</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gprs.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gprs.o(.text)
</UL>
<P><STRONG><a name="[24f9b3c]"></a>GSM_Delete_All_Msg</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[24f9b00]"></a>GSM_Msg_Delete</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[24f9ac4]"></a>GSM_Msg_Display</STRONG> (Thumb, 400 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a90a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
</UL>

<P><STRONG><a name="[24f9a88]"></a>GSM_Msg_Read</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fa3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[24f9a4c]"></a>readSMS</STRONG> (Thumb, 1576 bytes, Stack size 72 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f9a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[24f9b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Delete
<LI><a href="#[24f9b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Delete_All_Msg
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fd82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[25a90a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[25a9190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[25a92bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f9a10]"></a>SMS_READ_Setting</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f99d4]"></a>sampleTestlog</STRONG> (Thumb, 900 bytes, Stack size 176 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_EnableBuffer_Interrupt
<LI><a href="#[24f93bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DisableBuffer_Interrupt
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f9a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_QIState
<LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24fa280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24fa514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
</UL>

<P><STRONG><a name="[24f9998]"></a>LCD_ScrollDisplay</STRONG> (Thumb, 1360 bytes, Stack size 40 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24fc65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRead
<LI><a href="#[24fc710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinDirection
<LI><a href="#[24fcb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT_DetachInterrupt
<LI><a href="#[24fcbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT_AttachInterrupt
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[24fdf34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[24fe024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetAdcValue
<LI><a href="#[25a6df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a72dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[25a7390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[25a79a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[24f995c]"></a>SMSDefaultSetting</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[24f9920]"></a>GSM_Wait_for_Msg</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a90a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[25a949c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[24f98e4]"></a>GSM_Send_Msg</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a87f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[24f98a8]"></a>GSM_Calling</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[24f986c]"></a>GSM_HangCall</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
</UL>

<P><STRONG><a name="[24f9830]"></a>GSM_Response_Display</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, gprs.o(.text), UNUSED)

<P><STRONG><a name="[24f97f4]"></a>Get_SMSC_Number</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[25a9190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>

<P><STRONG><a name="[24f8444]"></a>LCD_SetUp</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_SetUp &rArr; GPIO_PinDirection
</UL>
<BR>[Calls]<UL><LI><a href="#[24fc710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[24f8408]"></a>LCD_CmdWrite</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24f8840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendLowerNibble
<LI><a href="#[24f887c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendHigherNibble
<LI><a href="#[24f88b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendCmdSignals
</UL>
<BR>[Called By]<UL><LI><a href="#[24f81ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd16x2_create_custom_char
<LI><a href="#[24f82a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollMessage
<LI><a href="#[24f8354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[24f8390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToNextLine
<LI><a href="#[24f83cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[24f968c]"></a>LCD_GoToLine</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_GoToLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[24f82a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollMessage
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[24f9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24f9fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f96c8]"></a>LCD_Clear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_Clear &rArr; LCD_GoToLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
</UL>
<BR>[Called By]<UL><LI><a href="#[24f83cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[24f9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24f9fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f83cc]"></a>LCD_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LCD_Init &rArr; LCD_Clear &rArr; LCD_GoToLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24f87c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[24f8390]"></a>LCD_GoToNextLine</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>

<P><STRONG><a name="[24f8354]"></a>LCD_SetCursor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[24f81b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd16x2_put_custom_char
</UL>

<P><STRONG><a name="[24f8318]"></a>LCD_DisplayChar</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToNextLine
<LI><a href="#[24f8750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[24f8264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNumber
<LI><a href="#[24f82a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollMessage
<LI><a href="#[24f82dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
</UL>

<P><STRONG><a name="[24f82dc]"></a>LCD_DisplayString</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_DisplayString &rArr; LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
</UL>

<P><STRONG><a name="[24f82a0]"></a>LCD_ScrollMessage</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f8318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>

<P><STRONG><a name="[24f8264]"></a>LCD_DisplayNumber</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LCD_DisplayNumber &rArr; LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
</UL>

<P><STRONG><a name="[24f8228]"></a>LCD_DisplayFloatNumber</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LCD_DisplayFloatNumber &rArr; LCD_DisplayNumber &rArr; LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNumber
<LI><a href="#[24f8318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[25a5b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[25a5dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[25a60d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[25a69f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
</UL>

<P><STRONG><a name="[24f9650]"></a>LCD_Printf</STRONG> (Thumb, 532 bytes, Stack size 72 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = LCD_Printf &rArr; LCD_DisplayFloatNumber &rArr; LCD_DisplayNumber &rArr; LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24f8228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[24f8264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNumber
<LI><a href="#[24f82dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[24f8318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[24f9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24f9fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f81ec]"></a>lcd16x2_create_custom_char</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24f8750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[24f81b0]"></a>lcd16x2_put_custom_char</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f8354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[24f8750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[24f7cc4]"></a>CLKPWR_SetPCLKDiv</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, lpc17xx_clkpwr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLKPWR_SetPCLKDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[24f7580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Init
<LI><a href="#[24f788c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_SetTimeOut
</UL>

<P><STRONG><a name="[24f7c88]"></a>CLKPWR_GetPCLKSEL</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f7c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetPCLK
</UL>

<P><STRONG><a name="[24f7c4c]"></a>CLKPWR_GetPCLK</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lpc17xx_clkpwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f7c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetPCLKSEL
</UL>

<P><STRONG><a name="[24f7c10]"></a>CLKPWR_ConfigPPWR</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f6c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[24f6d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[24f7bd4]"></a>CLKPWR_Sleep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[24f7b98]"></a>CLKPWR_DeepSleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[24f7b5c]"></a>CLKPWR_PowerDown</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[24f7b20]"></a>CLKPWR_DeepPowerDown</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[24f7580]"></a>WDT_Init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lpc17xx_wdt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WDT_Init &rArr; CLKPWR_SetPCLKDiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24f7cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_SetPCLKDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[24f92cc]"></a>WDT_Feed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc17xx_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f7490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_UpdateTimeOut
<LI><a href="#[24f7544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Start
<LI><a href="#[24f98e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[24f9c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[24f9c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[24f9dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[24f9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[24fa154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24fa190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[24fa244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PDP_Activation
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[24f7544]"></a>WDT_Start</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lpc17xx_wdt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WDT_Start &rArr; WDT_SetTimeOut &rArr; CLKPWR_SetPCLKDiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24f788c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_SetTimeOut
<LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[24f7508]"></a>WDT_ReadTimeOutFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lpc17xx_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f74cc]"></a>WDT_ClrTimeOutFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc17xx_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f7490]"></a>WDT_UpdateTimeOut</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lpc17xx_wdt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WDT_UpdateTimeOut &rArr; WDT_SetTimeOut &rArr; CLKPWR_SetPCLKDiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24f788c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_SetTimeOut
<LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f7454]"></a>WDT_GetCurrentCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc17xx_wdt.o(.text), UNUSED)

<P><STRONG><a name="[24f6e00]"></a>RTC_ClearIntPending</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f6d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[24f6dc4]"></a>RTC_GetIntPending</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f6d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[24f6d88]"></a>RTC_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[24f6dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetIntPending
<LI><a href="#[24f6e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearIntPending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24f6d4c]"></a>RTC_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[24f7c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[24f6d10]"></a>RTCStart</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6cd4]"></a>RTC_IntDisable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6c98]"></a>RTCStop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6c5c]"></a>RTC_DeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f7c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>

<P><STRONG><a name="[24f6c20]"></a>RTC_ResetClockTickCounter</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6be4]"></a>RTC_Cmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6ba8]"></a>RTC_CntIncrIntConfig</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6b6c]"></a>RTC_AlarmIntConfig</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6b30]"></a>RTC_SetTime</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6af4]"></a>RTC_GetTime</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6ab8]"></a>RTC_SetFullTime</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f9560]"></a>RTC_GetFullTime</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24fa460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24fa49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_1call
</UL>

<P><STRONG><a name="[24f6a7c]"></a>RTC_SetAlarmTime</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6a40]"></a>RTC_GetAlarmTime</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6a04]"></a>RTC_SetFullAlarmTime</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f69c8]"></a>RTC_GetFullAlarmTime</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f698c]"></a>RTC_CalibCounterCmd</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f6950]"></a>RTC_CalibConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24f94ac]"></a>RTC_WriteGPREG</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24fa460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24fa49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_1call
<LI><a href="#[24fa4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[24fa550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
</UL>

<P><STRONG><a name="[24f9524]"></a>RTC_ReadGPREG</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24fa460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24fa4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[24fa550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
</UL>

<P><STRONG><a name="[24f94e8]"></a>RTC_SetDateTime</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f9d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[25adeac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_date_time
</UL>

<P><STRONG><a name="[24f959c]"></a>RTC_GetDateTime</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[25ae014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>

<P><STRONG><a name="[24f6914]"></a>RTCSetAlarmMask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f59d8]"></a>UART_SetBaudRate</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = UART_SetBaudRate &rArr; getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[25a6328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[24f599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[24f599c]"></a>UART_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = UART_Init &rArr; UART_SetBaudRate &rArr; getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[24f59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudRate
<LI><a href="#[24fdf34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[24f5960]"></a>UART_RxChar</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f58e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxString
<LI><a href="#[25add80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_time_date
<LI><a href="#[25adeac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_date_time
<LI><a href="#[25adf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25adf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_foldername
<LI><a href="#[25adf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[24f5924]"></a>UART_RxChar3</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[24f9344]"></a>UART_TxChar</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f5870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[24f58ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxNumber
<LI><a href="#[24f58e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxString
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f98e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
</UL>

<P><STRONG><a name="[24f9308]"></a>UART_TxString</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_TxString
</UL>
<BR>[Calls]<UL><LI><a href="#[24f9344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
</UL>
<BR>[Called By]<UL><LI><a href="#[24f35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ATRH
<LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f4664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[24f46a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefault_WindSensor
<LI><a href="#[24f46dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f97f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SMSC_Number
<LI><a href="#[24f986c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_HangCall
<LI><a href="#[24f98a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Calling
<LI><a href="#[24f98e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[24f995c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSDefaultSetting
<LI><a href="#[24f9a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[24f9ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[24f9b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Delete
<LI><a href="#[24f9b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Delete_All_Msg
<LI><a href="#[24f9bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_QIState
<LI><a href="#[24f9c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[24f9c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[24f9d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerON
<LI><a href="#[24f9d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
<LI><a href="#[24f9d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[24f9dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[24f9e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[24f9e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[24f9ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24f9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
<LI><a href="#[24f9f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24fa154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24fa190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[24fa208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerOff
<LI><a href="#[24fa244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PDP_Activation
<LI><a href="#[24fa280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24fa2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PowerOff
<LI><a href="#[24fa2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24fa424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
<LI><a href="#[24fa460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25ad18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
<LI><a href="#[25adbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[24f58e8]"></a>UART_RxString</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[24f9344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
</UL>

<P><STRONG><a name="[24f58ac]"></a>UART_TxNumber</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_TxNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[24f9344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
</UL>
<BR>[Called By]<UL><LI><a href="#[24f5870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
</UL>

<P><STRONG><a name="[24f5870]"></a>UART_TxFloatNumber</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_TxFloatNumber &rArr; UART_TxNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[24f58ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxNumber
<LI><a href="#[24f9344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
<LI><a href="#[25a5b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[25a5dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[25a60d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[25a69f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
</UL>

<P><STRONG><a name="[24fdef8]"></a>UART_Printf</STRONG> (Thumb, 614 bytes, Stack size 72 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UART_Printf &rArr; UART_TxFloatNumber &rArr; UART_TxNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[24f5870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[24f58ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxNumber
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
<LI><a href="#[25a5c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f45ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor_InterruptBuffer
<LI><a href="#[24f4664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[24f46a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefault_WindSensor
<LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24fa460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24fa4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[24fa514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[24fa550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25ad18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
<LI><a href="#[25adbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25adc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[25adccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
<LI><a href="#[25add44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_format
<LI><a href="#[25add80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_time_date
<LI><a href="#[25addbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_dir
<LI><a href="#[25addf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_file_remove
<LI><a href="#[25ade34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_file
<LI><a href="#[25ade70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_filesize
<LI><a href="#[25adeac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_date_time
<LI><a href="#[25adee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
<LI><a href="#[25adf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25adf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_foldername
<LI><a href="#[25adf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
<LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[25ae014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[25ae050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
<LI><a href="#[25ae08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_CreateFolder
<LI><a href="#[25aec08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>

<P><STRONG><a name="[24f5834]"></a>UART1_IRQHandler</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24f57f8]"></a>UART0_IRQHandler</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24f57bc]"></a>UART3_IRQHandler</STRONG> (Thumb, 224 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24f5780]"></a>UART3_EnableBuffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[24f5744]"></a>UART3_DisableBuffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[24f9380]"></a>UART1_EnableBuffer_Interrupt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f93bc]"></a>UART1_DisableBuffer_Interrupt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f5708]"></a>UART0_EnableBuffer_Interrupt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f56cc]"></a>UART0_DisableBuffer_Interrupt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[24f4718]"></a>Buffer_Flush_UART0</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buffer_Flush_UART0
</UL>
<BR>[Calls]<UL><LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[24f45ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor_InterruptBuffer
<LI><a href="#[24f4664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[24f46a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefault_WindSensor
<LI><a href="#[24f46dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
</UL>

<P><STRONG><a name="[24f46dc]"></a>Configure_WindSensor</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Configure_WindSensor &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[24f4718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f46a0]"></a>SetDefault_WindSensor</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, wswd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f4718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>

<P><STRONG><a name="[24f4664]"></a>CheckCommunication_WindSensor</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = CheckCommunication_WindSensor &rArr; UART_Printf &rArr; UART_TxFloatNumber &rArr; UART_TxNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[24f4718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f4628]"></a>Trignometric_Conversion</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Trignometric_Conversion &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[25a4e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[25a54dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
</UL>

<P><STRONG><a name="[24f9470]"></a>Read_WindSensor</STRONG> (Thumb, 1272 bytes, Stack size 56 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Read_WindSensor &rArr; Trignometric_Conversion &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[24f4628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
<LI><a href="#[24f4718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fd7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a6df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25a6f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25a71b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f45ec]"></a>Read_WindSensor_InterruptBuffer</STRONG> (Thumb, 418 bytes, Stack size 8 bytes, wswd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f4718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[24f45b0]"></a>average_windDirection</STRONG> (Thumb, 664 bytes, Stack size 56 bytes, wswd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a56f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[25a6f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a71b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[25a72dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[25a79a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24f4574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
</UL>

<P><STRONG><a name="[24f4574]"></a>Average_WindSamples</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, wswd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[25a72dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[25a79a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f404c]"></a>i2c0_init</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ATRH
</UL>

<P><STRONG><a name="[24f4010]"></a>i2c0_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f35fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ATRH
</UL>

<P><STRONG><a name="[24f3fd4]"></a>i2c0_start</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ATRH
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[24f3f98]"></a>i2c0_stop</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ATRH
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[24f3f5c]"></a>i2c0_Address</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ATRH
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[24f3f20]"></a>i2c0_Write</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f35c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ATRH
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[24f3ee4]"></a>i2c0_Read</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[24f35fc]"></a>Init_ATRH</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atrh.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f4010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_enable
<LI><a href="#[24f404c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
</UL>

<P><STRONG><a name="[24f35c0]"></a>start_ATRH</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, atrh.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f3f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Write
<LI><a href="#[24f3f5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Address
<LI><a href="#[24f3f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_stop
<LI><a href="#[24f3fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_start
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
</UL>

<P><STRONG><a name="[24f8e94]"></a>readATRH</STRONG> (Thumb, 676 bytes, Stack size 72 bytes, atrh.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f3ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Read
<LI><a href="#[24f3f20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Write
<LI><a href="#[24f3f5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Address
<LI><a href="#[24f3f98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_stop
<LI><a href="#[24f3fd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_start
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a5a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[25a5c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[25a6aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[25a6df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a72dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[25a79a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[25a7c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
</UL>

<P><STRONG><a name="[24f3584]"></a>Average_ATRHSamples</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, atrh.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[25a5dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[25a66e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f251c]"></a>SysTick_Init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[24f24e0]"></a>SysTick_Start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25adc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writelog
</UL>

<P><STRONG><a name="[24f24a4]"></a>SysTick_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25adc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writelog
</UL>

<P><STRONG><a name="[24f2468]"></a>SysTick_AttachInterrupt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)

<P><STRONG><a name="[24f242c]"></a>SysTick_GetMsTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)

<P><STRONG><a name="[24f23f0]"></a>SysTick_GetUsTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)

<P><STRONG><a name="[24f23b4]"></a>SysTick_Handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[24f2378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_timerproc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25af784]"></a>BOD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bod.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25af748]"></a>BOD_Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bod.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[25ae1b8]"></a>disk_initialize</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = disk_initialize &rArr; send_cmd &rArr;  send_cmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25aecf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_init
<LI><a href="#[25aed34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[25aede8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off
<LI><a href="#[25aee24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[25aee9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[25aef8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[25ae17c]"></a>disk_status</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_status
</UL>
<BR>[Calls]<UL><LI><a href="#[25aecbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>

<P><STRONG><a name="[25ae140]"></a>disk_read</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25aec80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_read
<LI><a href="#[25aed34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[25aedac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[25aee9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ad768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[25ae104]"></a>disk_write</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = disk_write &rArr; send_cmd &rArr;  send_cmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25aed34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[25aed70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[25aee9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[25ab710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[25ab8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[25abe54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25ac034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[25ad768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[25ae0c8]"></a>disk_ioctl</STRONG> (Thumb, 750 bytes, Stack size 64 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + In Cycle
<LI>Call Chain = disk_ioctl &rArr;  disk_ioctl (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25aec44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_ioctl
<LI><a href="#[25aed34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[25aedac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[25aee60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[25aee9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[25aeed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[25aef8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[24f2378]"></a>disk_timerproc</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f23b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[25ae08c]"></a>f_CreateFolder</STRONG> (Thumb, 68 bytes, Stack size 1104 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25ae050]"></a>sd_append_file</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[25ada38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>

<P><STRONG><a name="[25ae014]"></a>create_file</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[25ad6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ae050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
</UL>
<BR>[Called By]<UL><LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
</UL>

<P><STRONG><a name="[25adfd8]"></a>create_folder</STRONG> (Thumb, 550 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[25ad6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[25ada74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
<LI><a href="#[25ae014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>
<BR>[Called By]<UL><LI><a href="#[25adc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writelog
</UL>

<P><STRONG><a name="[25adf9c]"></a>get_name</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a87f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[25addbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_dir
<LI><a href="#[25addf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_file_remove
<LI><a href="#[25ade34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_file
<LI><a href="#[25adee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
</UL>

<P><STRONG><a name="[25adf60]"></a>get_foldername</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[25adf24]"></a>write_data</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a87f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[25adee8]"></a>getdetails</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a8ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[25ad72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[25ad7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[25adf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[25adeac]"></a>set_date_time</STRONG> (Thumb, 276 bytes, Stack size 80 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[24f94e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDateTime
<LI><a href="#[24fd82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
</UL>

<P><STRONG><a name="[25ade70]"></a>sd_filesize</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[25ade34]"></a>sd_create_file</STRONG> (Thumb, 650 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ada38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[25adf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[25addf8]"></a>sd_file_remove</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25adf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[25addbc]"></a>sd_create_dir</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[25adf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[25add80]"></a>sd_time_date</STRONG> (Thumb, 426 bytes, Stack size 80 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f5960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[24fd82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25add44]"></a>sd_format</STRONG> (Thumb, 62 bytes, Stack size 1032 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[25add08]"></a>xatoi</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[25adccc]"></a>show_volume_stat</STRONG> (Thumb, 386 bytes, Stack size 56 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[25ad9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[25aebcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
<LI><a href="#[25aec08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>

<P><STRONG><a name="[25adc90]"></a>dir_list</STRONG> (Thumb, 356 bytes, Stack size 72 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[25ad7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[25aec08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>

<P><STRONG><a name="[25adc54]"></a>Writelog</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f24a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[24f24e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24f97b8]"></a>Createlog</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = Createlog &rArr; f_open &rArr; mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24f24a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[24f24e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[25ada38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25ad18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
</UL>

<P><STRONG><a name="[25adc18]"></a>retrylog</STRONG> (Thumb, 946 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f24a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[24f24e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a87f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[25ad948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[25ada38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[25aec08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
</UL>

<P><STRONG><a name="[25adbdc]"></a>log_SMS</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a87f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[25ada38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[25aec08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>

<P><STRONG><a name="[24f8e58]"></a>readconfigfile</STRONG> (Thumb, 144 bytes, Stack size 1080 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1528<LI>Call Chain = readconfigfile &rArr; f_open &rArr; mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24f24a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[24f24e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[25ada38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[25aec08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f8de0]"></a>smsUpdateConfig</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f24a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[24f24e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ada38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[25ad18c]"></a>Slog</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24fa49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_1call
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[25ad150]"></a>PacketLog</STRONG> (Thumb, 1508 bytes, Stack size 96 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f3584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_ATRHSamples
<LI><a href="#[24f4574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_EnableBuffer_Interrupt
<LI><a href="#[24f93bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DisableBuffer_Interrupt
<LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24f9a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9bb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_QIState
<LI><a href="#[24f9bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[24f9c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[24f9d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
<LI><a href="#[24f9dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[24f9e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[24f9ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24fa280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24fa514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[25adc54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writelog
</UL>

<P><STRONG><a name="[25ad114]"></a>SendingLog</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_EnableBuffer_Interrupt
<LI><a href="#[24f93bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DisableBuffer_Interrupt
<LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24f9a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[24f9d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
<LI><a href="#[24f9dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[24f9e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[24f9e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[24f9ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[24f9efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24fa280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[25ad0d8]"></a>get_fattime</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, log.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_fattime
</UL>
<BR>[Calls]<UL><LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25ac994]"></a>NVIC_SetPriorities</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_SetPriorities &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[25acc64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[25acca0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25ac958]"></a>Configure_GPIO_Peripherals</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Configure_GPIO_Peripherals &rArr; set_ResistorMode
</UL>
<BR>[Calls]<UL><LI><a href="#[24fc5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_OpenDrainMode
<LI><a href="#[24fc620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ResistorMode
<LI><a href="#[24fc710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinDirection
<LI><a href="#[24fdf34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25ac91c]"></a>Initialize_ALL_Peripherals</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Initialize_ALL_Peripherals &rArr; UART_Init &rArr; UART_SetBaudRate &rArr; getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[24f251c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[24f599c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[24f6d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[24f7544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Start
<LI><a href="#[24f7580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Init
<LI><a href="#[24f83cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[24f8444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetUp
<LI><a href="#[24fe060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[25af748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BOD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25ac8e0]"></a>main</STRONG> (Thumb, 1478 bytes, Stack size 48 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1576 + Unknown Stack Size
<LI>Call Chain = main &rArr; readconfigfile &rArr; f_open &rArr; mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[24f24a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[24f24e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[24f4664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[24f46dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[24f5708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_EnableBuffer_Interrupt
<LI><a href="#[24f6914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetAlarmMask
<LI><a href="#[24f7490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_UpdateTimeOut
<LI><a href="#[24f74cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_ClrTimeOutFlag
<LI><a href="#[24f7508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_ReadTimeOutFlag
<LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24f92cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24f9308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24f9380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_EnableBuffer_Interrupt
<LI><a href="#[24f93bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DisableBuffer_Interrupt
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f959c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f968c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[24f96c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24f9e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[24f9ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[24fa280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24fa460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24fd82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[24ff26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[25a92bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[25ac91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
<LI><a href="#[25ac958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
<LI><a href="#[25ac994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriorities
<LI><a href="#[25acc64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[25ae1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[25a1e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[25ad858]"></a>f_mount</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = f_mount &rArr; mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[25adbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25adc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[25adccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
<LI><a href="#[25addbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_dir
<LI><a href="#[25ade34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_file
<LI><a href="#[25adee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
<LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[25ae050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
<LI><a href="#[25ae08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_CreateFolder
</UL>

<P><STRONG><a name="[25ad81c]"></a>f_open</STRONG> (Thumb, 516 bytes, Stack size 104 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = f_open &rArr; mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[25abd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[25abd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[25abecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25abf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[25ac250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[25ac2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[25ad0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[25ae140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[25adbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25ade34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_file
<LI><a href="#[25ae014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[25aec44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_ioctl
</UL>

<P><STRONG><a name="[25ad768]"></a>f_read</STRONG> (Thumb, 506 bytes, Stack size 64 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + In Cycle
<LI>Call Chain = f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25abf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[25ac214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[25ae140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[25aec44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_ioctl
<LI><a href="#[25aec80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_read
</UL>

<P><STRONG><a name="[25ab710]"></a>f_write</STRONG> (Thumb, 568 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = f_write &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[25abe90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[25abf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[25ac214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[25ae140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_flush
<LI><a href="#[25ab8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[25ad678]"></a>f_sync</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr;  disk_ioctl (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[25abd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[25ac28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[25ad0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[25ada38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[25ada38]"></a>f_close</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; disk_ioctl &rArr;  disk_ioctl (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[25adbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25ade34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_file
<LI><a href="#[25ae050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
</UL>

<P><STRONG><a name="[25ab6d4]"></a>f_chdrive</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25aba1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
</UL>

<P><STRONG><a name="[25ada74]"></a>f_chdir</STRONG> (Thumb, 90 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
</UL>

<P><STRONG><a name="[25ab698]"></a>f_getcwd</STRONG> (Thumb, 328 bytes, Stack size 376 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25abad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[25abbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[25abd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[25ad90c]"></a>f_lseek</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + In Cycle
<LI>Call Chain = f_lseek &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[25abe90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25abf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[25ae140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25ae050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
<LI><a href="#[25aec44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_ioctl
<LI><a href="#[25aec80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_read
</UL>

<P><STRONG><a name="[25ad7e0]"></a>f_opendir</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[25adc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[25adee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
<LI><a href="#[25aebcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[25ad9fc]"></a>f_closedir</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[25adee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
</UL>

<P><STRONG><a name="[25ad72c]"></a>f_readdir</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[25abad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[25abbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[25adc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[25adee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
<LI><a href="#[25aebcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[25ad6b4]"></a>f_stat</STRONG> (Thumb, 62 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[25ae014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>

<P><STRONG><a name="[25ad9c0]"></a>f_getfree</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[25ac304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[25adc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[25adccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
<LI><a href="#[25ade70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_filesize
</UL>

<P><STRONG><a name="[25ab65c]"></a>f_truncate</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[25abecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[25ad63c]"></a>f_unlink</STRONG> (Thumb, 196 bytes, Stack size 120 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[25abbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[25abd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25addf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_file_remove
</UL>

<P><STRONG><a name="[25ad8d0]"></a>f_mkdir</STRONG> (Thumb, 280 bytes, Stack size 96 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[25abd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[25abe54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[25abe90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[25abecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[25ac214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[25ac250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[25ad0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[25add80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_time_date
<LI><a href="#[25addbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_dir
<LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[25ae08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_CreateFolder
</UL>

<P><STRONG><a name="[25ad6f0]"></a>f_rename</STRONG> (Thumb, 282 bytes, Stack size 160 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[25abd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[25abd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[25abf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[25ab620]"></a>f_chmod</STRONG> (Thumb, 98 bytes, Stack size 80 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[25ab5e4]"></a>f_utime</STRONG> (Thumb, 90 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25ac250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
</UL>

<P><STRONG><a name="[25ad984]"></a>f_getlabel</STRONG> (Thumb, 202 bytes, Stack size 96 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25abbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[25adccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
</UL>

<P><STRONG><a name="[25ab5a8]"></a>f_setlabel</STRONG> (Thumb, 306 bytes, Stack size 104 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[25ab47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_uni2oem
<LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25abbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[25abda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25ac0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
<LI><a href="#[25ac160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[25ac214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>

<P><STRONG><a name="[25ab56c]"></a>f_expand</STRONG> (Thumb, 332 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[25abf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>

<P><STRONG><a name="[25ad894]"></a>f_mkfs</STRONG> (Thumb, 1770 bytes, Stack size 152 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[25aba1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[25ac214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[25ac250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[25ac28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[25ad0d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[25ae1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[25add44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_format
</UL>

<P><STRONG><a name="[25ad948]"></a>f_gets</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = f_gets &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ad768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[25adbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[25ab530]"></a>f_putc</STRONG> (Thumb, 34 bytes, Stack size 88 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_init
<LI><a href="#[25ab878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_flush
<LI><a href="#[25ab8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[25ad7a4]"></a>f_puts</STRONG> (Thumb, 44 bytes, Stack size 88 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = f_puts &rArr; putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_init
<LI><a href="#[25ab878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_flush
<LI><a href="#[25ab8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24f97b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25ae050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
</UL>

<P><STRONG><a name="[25ab4f4]"></a>f_printf</STRONG> (Thumb, 712 bytes, Stack size 168 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_init
<LI><a href="#[25ab878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_flush
<LI><a href="#[25ab8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[25ab47c]"></a>ff_uni2oem</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, syscall.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ff_uni2oem
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25aba94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[25ac070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_utf
</UL>

<P><STRONG><a name="[25ab4b8]"></a>ff_oem2uni</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, syscall.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ff_oem2uni
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
</UL>

<P><STRONG><a name="[25ab440]"></a>ff_wtoupper</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, syscall.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25aba94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[25abcec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[25aa84c]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[25a43fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[25a4528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[24f98a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Calling
<LI><a href="#[24f98e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[24f9ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[24f9b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Delete
<LI><a href="#[24f9c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25ad18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
<LI><a href="#[25add80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_time_date
<LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[25ae014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>

<P><STRONG><a name="[25aa504]"></a>_printf_pre_padding</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[25a4654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[25aa3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[25aa4c8]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[25a4654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[25aa3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[25aa3d8]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25aa4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[25aa504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[25a430c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[25aa270]"></a>_printf_int_dec</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25a3a60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[25a4654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[25a967c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[25a9b68]"></a>__printf</STRONG> (Thumb, 324 bytes, Stack size 40 bytes, __printf_flags_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[25a95c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[25a4528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[25a949c]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a40b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[25a4924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Wait_for_Msg
</UL>

<P><STRONG><a name="[25a92bc]"></a>strtok</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, strtok.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = strtok &rArr; __strtok_internal &rArr; strspn
</UL>
<BR>[Calls]<UL><LI><a href="#[25a3f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtok_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[25a9190]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f97f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SMSC_Number
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24fc170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_gnss_get_param
</UL>

<P><STRONG><a name="[25a90a0]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Wait_for_Msg
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24fa118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24fa334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24fa370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[25a8fb0]"></a>strcpy</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24f4574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[24f45ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor_InterruptBuffer
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[24f9f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25ad18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
<LI><a href="#[25aebcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[25a8ec0]"></a>strncmp</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[24fa424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
</UL>

<P><STRONG><a name="[25a8dd0]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[24f45ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor_InterruptBuffer
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f98e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[24f9c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
<LI><a href="#[25aebcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[25a8ce0]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a8b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[25adee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
</UL>

<P><STRONG><a name="[25a8ca4]"></a>__rt_memcpy</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3de4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[25a8c68]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[25a8b3c]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24fa424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
</UL>

<P><STRONG><a name="[25a8b00]"></a>__rt_memmove</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a8ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[25a8ac4]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[25a8998]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f4718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[24f98e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[24f99d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[24f9a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24f9ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[24f9ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24f9fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24fa064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24fa0dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24fa3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[25a8650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ad114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[25ad150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[25ad18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
<LI><a href="#[25adf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_foldername
<LI><a href="#[25adfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
</UL>

<P><STRONG><a name="[25a895c]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a8740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[25a8920]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[25a87f4]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f98e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[25adbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25adf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[25adf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[25a87b8]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[25a877c]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[25a8740]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a895c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[25a8650]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[24f9fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24f9fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
</UL>

<P><STRONG><a name="[25a8560]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[25a8524]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[25a84e8]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[25a4924]"></a>__aeabi_errno_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25a1864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[25a40b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[25a4744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[25a4780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
<LI><a href="#[25a949c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[25a48e8]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[25a48ac]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[25a4780]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a4924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[25a4744]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[25a4924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[25a2458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[25a4e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a54dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[25a4654]"></a>_printf_int_common</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25aa4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[25aa504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[25aa270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[25a4528]"></a>_printf_char_common</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[25a9b68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[25a43fc]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25aa84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[25a430c]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25aa3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[25a4294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[25a42d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[25a42d0]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25a430c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[25a985c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[25a4294]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25a430c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[25a976c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[25a40b4]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a1864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[25a1abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[25a4924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[25a949c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[25a3f4c]"></a>__strtok_internal</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, strtok_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __strtok_internal &rArr; strspn
</UL>
<BR>[Calls]<UL><LI><a href="#[25a1648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strspn
<LI><a href="#[25a1738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcspn
</UL>
<BR>[Called By]<UL><LI><a href="#[25a92bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
</UL>

<P><STRONG><a name="[25a3de4]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a3bc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[25a8ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[25a3da8]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[25a3d6c]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[25a3d30]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[25a3c40]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[25a3c04]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[25a3bc8]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3de4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[25a3b8c]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[25a3b50]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[25a3a60]"></a>__rt_udiv10</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25aa270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[25a2278]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[25a223c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25a1120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[25a2200]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[25a1abc]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323f8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[25a40b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[25a1864]"></a>_strtoul</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, _strtoul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a4924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[323f7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[25a40b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[25a1738]"></a>strcspn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, strcspn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcspn
</UL>
<BR>[Called By]<UL><LI><a href="#[25a3f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtok_internal
</UL>

<P><STRONG><a name="[25a1648]"></a>strspn</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, strspn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strspn
</UL>
<BR>[Called By]<UL><LI><a href="#[25a3f4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtok_internal
</UL>

<P><STRONG><a name="[25a1120]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2500694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[25a223c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[25a1be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[323f8b0]"></a>__rt_locale</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25a1abc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[323dd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[323f7c0]"></a>_chval</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _chval.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a1864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[323f43c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[323eadc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[25a1e04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[323e938]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[323f5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[323cac0]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[323cdcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[323c28c]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[323c250]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[25a27a0]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 642 bytes, Stack size 96 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[25a1558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[25a2db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a7390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[25a75e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[25a79a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[25a7c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[25a7cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[25a4e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[25a54dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[25a2ae8]"></a>__kernel_cos</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[25a29f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[25a2db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a75e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[25a7c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[25a7cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[25a4e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[25a54dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[25a29f8]"></a>__kernel_poly</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[25a25fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25a2ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a56f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[25a25fc]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[25a29f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[25a2db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a75e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[25a7c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[25a7cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[25a4e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[25a54dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[25a56f8]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 48 bytes, atan.o(i.atan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a29f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[25a2db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25a6f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a79a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[25a7c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[25a7cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
</UL>

<P><STRONG><a name="[25a5068]"></a>copysign</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pow.o(i.copysign), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[25a54dc]"></a>cos</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[25a25fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a2ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[25a2db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25a4744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[24f4628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
</UL>

<P><STRONG><a name="[25a502c]"></a>pow</STRONG> (Thumb, 2244 bytes, Stack size 208 bytes, pow.o(i.pow), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a2458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[25a29f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[25a2db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25a4744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[25a5068]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copysign
<LI><a href="#[25a6f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a7390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[25a79a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[25a7c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[25a7cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
</UL>

<P><STRONG><a name="[25a4e10]"></a>sin</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[25a25fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a2ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[25a2db8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25a4744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[24f4628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
</UL>

<P><STRONG><a name="[25a2458]"></a>sqrt</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrt.o(i.sqrt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a142c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[25a4744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[25a71b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[323f5e0]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[323e938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[323dc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[25a8164]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[24f4574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f5e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24fa460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24fa49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_1call
<LI><a href="#[24fa4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[24fa514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[24fa550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
</UL>

<P><STRONG><a name="[25a8128]"></a>_d2f</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[25a80ec]"></a>__fpl_inf_d2f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[25a7da4]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f4628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
<LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24fa4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[24fa514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[24fa550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[25a25fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a29f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a56f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[25a7d68]"></a>_dadd</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[25a7de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[25a7d2c]"></a>__fpl_inf_dadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[25a3970]"></a>__fpl_dcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck))
<BR><BR>[Calls]<UL><LI><a href="#[25a1300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[25a1558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[25a3754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[25a7048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[25a796c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[25a7c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[25a7d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[25a3844]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a1300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[25a142c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[25a2d7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[25a75ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[25a8128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[25a3754]"></a>__fpl_dcmp_InfNaN</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a1210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[25a3970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[25a6ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
<LI><a href="#[25a7174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[25a778c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[25a3718]"></a>__fpl_inf_dcmp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[25a32e0]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a1210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[25a34c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[25a59c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[25a5c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[25a64cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[25a32a4]"></a>__fpl_inf_fcmp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[25a79a8]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[24f4574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a56f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[25a796c]"></a>_ddiv</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[25a700c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_inf_dmul
<LI><a href="#[25a78f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv_mantissas
</UL>

<P><STRONG><a name="[25a7930]"></a>__fpl_inf_ddiv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[25a78f4]"></a>_ddiv_mantissas</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a796c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[25a77c8]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Called By]<UL><LI><a href="#[24f5ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isIntValue
</UL>

<P><STRONG><a name="[25a778c]"></a>_dcmpeq</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[25a75e8]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24f5ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isIntValue
<LI><a href="#[25a25fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a2ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[25a75ac]"></a>_dfix</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[25a7570]"></a>__fpl_inf_dfix</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[25a7390]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24f5ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isIntValue
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[25a7354]"></a>_dflt</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[25a7318]"></a>__dflt_normalise</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dflt_clz.o(x$fpl$dflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a72a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfltu
</UL>

<P><STRONG><a name="[25a72dc]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24f4574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24fa514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
</UL>

<P><STRONG><a name="[25a72a0]"></a>_dfltu</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a7318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dflt_normalise
</UL>

<P><STRONG><a name="[25a71b0]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Called By]<UL><LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24f5e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[25a2458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[25a7174]"></a>_dcmple</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[25a7084]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f4628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
<LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24fa514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25a25fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a29f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[25a2ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a56f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[25a7048]"></a>_dmul</STRONG> (Thumb, 440 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[25a700c]"></a>__fpl_inf_dmul</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a796c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[25a1558]"></a>_drem</STRONG> (Thumb, 396 bytes, Stack size 16 bytes, drem_clz.o(x$fpl$drem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[25a3970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[25a151c]"></a>__fpl_inf_drem</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, drem_clz.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[25a6f1c]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Called By]<UL><LI><a href="#[24f45b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a56f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[25a6ee0]"></a>_drcmple</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[25a7cf0]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[24f5e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[25a25fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a2ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a56f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[25a7cb4]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a7de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[25a7e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[25a142c]"></a>_dsqrt</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[25a2458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[25a13f0]"></a>__fpl_inf_dsqrt</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[25a7c78]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24f5e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[25a25fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a2ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a56f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[25a7c3c]"></a>_dsub</STRONG> (Thumb, 572 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[25a7e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[25a7c00]"></a>__fpl_inf_dsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[25a35ec]"></a>__dunder</STRONG> (Thumb, 234 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[25a35b0]"></a>__dunder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[25a6df0]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[24f5e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24f9470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24f9998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24fa460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24fa4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[24fa550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[24fdfe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
</UL>

<P><STRONG><a name="[25a6db4]"></a>_f2d</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a33d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[25a6d78]"></a>__fpl_inf_f2d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[25a6aa8]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Called By]<UL><LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[24fd7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
</UL>

<P><STRONG><a name="[25a6a6c]"></a>_fadd</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a34c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[25a6ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[25a6a30]"></a>__fpl_inf_fadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[25a34c0]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a1300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[25a32e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[25a5b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[25a66ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[25a6940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[25a6a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[25a33d0]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a1300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[25a6094]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[25a62ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[25a6db4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[25a66e8]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[24f3584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_ATRHSamples
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[24fd7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[25a66ac]"></a>_fdiv</STRONG> (Thumb, 476 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a34c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[25a6670]"></a>__fpl_inf_fdiv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fdiv.o(x$fpl$fdiv), UNUSED)

<P><STRONG><a name="[25a6508]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, feqf.o(x$fpl$feqf))
<BR><BR>[Called By]<UL><LI><a href="#[24f5e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[24fa460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[25a64cc]"></a>_fcmpeq</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a32e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[25a6328]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Called By]<UL><LI><a href="#[24f59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudRate
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[25a62ec]"></a>_ffix</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a33d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[25a62b0]"></a>__fpl_inf_ffix</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ffix.o(x$fpl$ffix), UNUSED)

<P><STRONG><a name="[25a60d0]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Called By]<UL><LI><a href="#[24f5870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[24f8228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
</UL>

<P><STRONG><a name="[25a6094]"></a>_ffixu</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a33d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[25a6058]"></a>__fpl_inf_ffixu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ffixu.o(x$fpl$ffixu), UNUSED)

<P><STRONG><a name="[25a5e78]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[24fd7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[25a5e3c]"></a>_fflt</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[25a5e00]"></a>__fflt_normalise</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fflt_clz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a5d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffltu
</UL>

<P><STRONG><a name="[25a5dc4]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[24f3584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_ATRHSamples
<LI><a href="#[24f5870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[24f8228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
</UL>

<P><STRONG><a name="[25a5d88]"></a>_ffltu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a5e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fflt_normalise
</UL>

<P><STRONG><a name="[25a5c98]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Called By]<UL><LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
</UL>

<P><STRONG><a name="[25a5c5c]"></a>_fcmple</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a32e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[25a5b6c]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Called By]<UL><LI><a href="#[24f5870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[24f8228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[24fd7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[25a5b30]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a34c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[25a5af4]"></a>__fpl_inf_fmul</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[25a31b4]"></a>__fpl_normalise2</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, fnorm2_clz.o(x$fpl$fnorm2), UNUSED)

<P><STRONG><a name="[25a5a04]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[24f5e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[24f8e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[25a59c8]"></a>_frcmple</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a32e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[25a69f4]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[24f5870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[24f8228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[24fd868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[25a69b8]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a6ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[25a6b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[25a697c]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[25a6940]"></a>_fsub</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a34c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[25a6b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[25a6904]"></a>__fpl_inf_fsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[25a30c4]"></a>__funder</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[25a3088]"></a>__funder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[25a1300]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[25a1210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[25a33d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[25a34c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[25a3844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[25a3970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[25a2db8]"></a>__ARM_scalbn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Called By]<UL><LI><a href="#[25a25fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25a27a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[25a2ae8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[25a4e10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[25a502c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[25a54dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[25a56f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[25a2d7c]"></a>scalbn</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a3844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[25a2d40]"></a>__fpl_inf_scalbn</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, scalbn.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[25a1210]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[25a1300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[25a32e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[25a3754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[25a2c50]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, usenofp.o(x$fpl$usenofp), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[24fea74]"></a>adc_GetPclk</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24fe060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[24fc170]"></a>gsm_gnss_get_param</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a9190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[24fc134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
</UL>

<P><STRONG><a name="[24fc134]"></a>store_gps</STRONG> (Thumb, 456 bytes, Stack size 72 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24fc170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_gnss_get_param
<LI><a href="#[24fd82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[24fdd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[25a5b6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[25a5e78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[25a66e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[25a6aa8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[25a8650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[25a8998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24fa1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
</UL>

<P><STRONG><a name="[24f88b8]"></a>lcd_SendCmdSignals</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_SendCmdSignals &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fdf70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24f87c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
</UL>

<P><STRONG><a name="[24f887c]"></a>lcd_SendHigherNibble</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_SendHigherNibble &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24f8750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
<LI><a href="#[24f87c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
</UL>

<P><STRONG><a name="[24f8840]"></a>lcd_SendLowerNibble</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_SendLowerNibble &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24f8750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[24f8804]"></a>lcd_BusyCheck</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[24fc65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRead
<LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fc710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinDirection
<LI><a href="#[24fdf70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24f8750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[24f87c8]"></a>lcd_Reset</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lcd_Reset &rArr; lcd_SendHigherNibble &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[24f887c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendHigherNibble
<LI><a href="#[24f88b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendCmdSignals
<LI><a href="#[24fdf70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
<LI><a href="#[24fdfac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24f83cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[24f878c]"></a>lcd_SendDataSignals</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_SendDataSignals &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[24fc6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[24fdf70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[24f8750]"></a>lcd_DataWrite</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lcd_DataWrite &rArr; lcd_SendDataSignals &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[24f878c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendDataSignals
<LI><a href="#[24f8804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24f8840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendLowerNibble
<LI><a href="#[24f887c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendHigherNibble
</UL>
<BR>[Called By]<UL><LI><a href="#[24f81b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd16x2_put_custom_char
<LI><a href="#[24f81ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd16x2_create_custom_char
<LI><a href="#[24f8318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>

<P><STRONG><a name="[24f788c]"></a>WDT_SetTimeOut</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, lpc17xx_wdt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WDT_SetTimeOut &rArr; CLKPWR_SetPCLKDiv
</UL>
<BR>[Calls]<UL><LI><a href="#[24f7cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_SetPCLKDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[24f7490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_UpdateTimeOut
<LI><a href="#[24f7544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Start
</UL>

<P><STRONG><a name="[24f5ec4]"></a>isIntValue</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = isIntValue &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[25a7390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[25a75e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[25a77c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
</UL>

<P><STRONG><a name="[24f5e88]"></a>getFRValues</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[25a5a04]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[25a6508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[25a6df0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25a71b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[25a7c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[25a7cf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[25a8164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24f5e4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
</UL>

<P><STRONG><a name="[24f5e4c]"></a>getFractionValues</STRONG> (Thumb, 388 bytes, Stack size 96 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[24f5e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[24f5ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isIntValue
<LI><a href="#[25a6f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25a7084]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25a71b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[25a7390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[25a75e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[25a79a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[25a7c78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[25a7da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24f59d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudRate
</UL>

<P><STRONG><a name="[25aef8c]"></a>xchg_spi</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25ae1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[25aed34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[25aed70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[25aedac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[25aee60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[25aee9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[25aeed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
</UL>

<P><STRONG><a name="[25aef50]"></a>rcvr_spi_multi</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rcvr_spi_multi
</UL>
<BR>[Called By]<UL><LI><a href="#[25aedac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
</UL>

<P><STRONG><a name="[25aef14]"></a>xmit_spi_multi</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = xmit_spi_multi
</UL>
<BR>[Called By]<UL><LI><a href="#[25aed70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
</UL>

<P><STRONG><a name="[25aeed8]"></a>wait_ready</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wait_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[25aef8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25aed70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[25aee60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
</UL>

<P><STRONG><a name="[25aee9c]"></a>deselect</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = deselect
</UL>
<BR>[Calls]<UL><LI><a href="#[25aef8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[25ae140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[25ae1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[25aed34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[25aede8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off
<LI><a href="#[25aee60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
</UL>

<P><STRONG><a name="[25aee60]"></a>select</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = select &rArr; wait_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[25aee9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[25aeed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[25aef8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25aed34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[25aede8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off
</UL>

<P><STRONG><a name="[25aee24]"></a>power_on</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ae1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[25aede8]"></a>power_off</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = power_off &rArr; select &rArr; wait_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[25aee60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[25aee9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[25aedac]"></a>rcvr_datablock</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = rcvr_datablock &rArr; rcvr_spi_multi
</UL>
<BR>[Calls]<UL><LI><a href="#[25aef50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi_multi
<LI><a href="#[25aef8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25ae140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[25aed70]"></a>xmit_datablock</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xmit_datablock &rArr; wait_ready
</UL>
<BR>[Calls]<UL><LI><a href="#[25aeed8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[25aef14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi_multi
<LI><a href="#[25aef8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[25aed34]"></a>send_cmd</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = send_cmd &rArr;  send_cmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25aed34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[25aee60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[25aee9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[25aef8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[25ae140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[25ae1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[25aed34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
</UL>

<P><STRONG><a name="[25aecf8]"></a>vd_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ae1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[25aecbc]"></a>vd_stat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ae17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>

<P><STRONG><a name="[25aec80]"></a>vd_read</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ad768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[25aec44]"></a>vd_ioctl</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + In Cycle
<LI>Call Chain = vd_ioctl &rArr;  f_open (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ad768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[25aec08]"></a>put_rc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = put_rc &rArr; UART_Printf &rArr; UART_TxFloatNumber &rArr; UART_TxNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[24fdef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[24f8e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[25adbdc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[25adc18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[25adc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[25adccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
</UL>

<P><STRONG><a name="[25aebcc]"></a>scan_files</STRONG> (Thumb, 450 bytes, Stack size 80 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25a8dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25a8fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[25ad72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[25ad7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[25aebcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>
<BR>[Called By]<UL><LI><a href="#[25adccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
<LI><a href="#[25aebcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[25acca0]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[25ac994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriorities
</UL>

<P><STRONG><a name="[25acc64]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ac8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[25ac994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriorities
</UL>

<P><STRONG><a name="[25ac304]"></a>ld_word</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25ab9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[25abad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[25abcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[25abcec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
<LI><a href="#[25abd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25ad9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[25ac2c8]"></a>ld_dword</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25ab9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[25abad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[25abf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[25ad9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[25ac28c]"></a>st_word</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ab8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[25abc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_lfn
<LI><a href="#[25abd28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[25abf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[25ac250]"></a>st_dword</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ab5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[25ab8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[25abf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25ac214]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25ab710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[25abc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25ac1d8]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25ab83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_init
<LI><a href="#[25ab8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[25aba94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[25abe54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25ac19c]"></a>mem_cmp</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[25abb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[25ac160]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25aba94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[25ac124]"></a>dbc_1st</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25abc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[25ac0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
</UL>

<P><STRONG><a name="[25ac0e8]"></a>dbc_2nd</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ac0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
</UL>

<P><STRONG><a name="[25ac0ac]"></a>tchar2uni</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = tchar2uni &rArr; ff_oem2uni
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_oem2uni
<LI><a href="#[25ac0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbc_2nd
<LI><a href="#[25ac124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbc_1st
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25aba94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[25ac070]"></a>put_utf</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ab47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_uni2oem
</UL>
<BR>[Called By]<UL><LI><a href="#[25abad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>

<P><STRONG><a name="[25ac034]"></a>sync_window</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sync_window &rArr; disk_write &rArr; send_cmd &rArr;  send_cmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[25abe54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[25abfbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[25abff8]"></a>move_window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ac034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[25ae140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25ab9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[25abb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[25abb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[25abbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[25abda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[25abf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[25ad9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[25abfbc]"></a>sync_fs</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = sync_fs &rArr; disk_ioctl &rArr;  disk_ioctl (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ac034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[25ac250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[25ac28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25ab5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[25ab620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25abf80]"></a>clst2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25ab710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abe54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[25abf44]"></a>get_fat</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = get_fat &rArr;  move_window (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[25ac304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_expand
<LI><a href="#[25ab65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abe90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[25abecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[25ad768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[25ad9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[25abf08]"></a>put_fat</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + In Cycle
<LI>Call Chain = put_fat &rArr;  move_window (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[25ac28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[25ac2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_expand
<LI><a href="#[25abe90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[25abecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[25abecc]"></a>remove_chain</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = remove_chain &rArr; put_fat &rArr;  move_window (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25abe90]"></a>create_chain</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = create_chain &rArr; put_fat &rArr;  move_window (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abf08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[25abe54]"></a>dir_clear</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = dir_clear &rArr; sync_window &rArr; disk_write &rArr; send_cmd &rArr;  send_cmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[25ac034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25abe18]"></a>dir_sdi</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = dir_sdi &rArr; get_fat &rArr;  move_window (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25abf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25ab698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[25abb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[25abda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[25ad7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[25ad984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
</UL>

<P><STRONG><a name="[25abddc]"></a>dir_next</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = dir_next &rArr; dir_clear &rArr; sync_window &rArr; disk_write &rArr; send_cmd &rArr;  send_cmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abe54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[25abe90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[25abf44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[25abf80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[25abb0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[25abb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[25abbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[25abda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[25ad72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[25abda0]"></a>dir_alloc</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = dir_alloc &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[25abd64]"></a>ld_clust</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ld_clust
</UL>
<BR>[Calls]<UL><LI><a href="#[25ac304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ada74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[25abd28]"></a>st_clust</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = st_clust
</UL>
<BR>[Calls]<UL><LI><a href="#[25ac28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25abcec]"></a>cmp_lfn</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = cmp_lfn &rArr; ff_wtoupper
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[25ac304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[25abb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[25abcb0]"></a>pick_lfn</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ac304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[25abbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[25abc74]"></a>put_lfn</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = put_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[25ac28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
</UL>
<BR>[Called By]<UL><LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[25abc38]"></a>gen_numname</STRONG> (Thumb, 218 bytes, Stack size 64 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = gen_numname &rArr; mem_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[25ac124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbc_1st
<LI><a href="#[25ac214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[25abbfc]"></a>sum_sfn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sum_sfn
</UL>
<BR>[Called By]<UL><LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[25abb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[25abbc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[25abbc0]"></a>dir_read</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25abbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[25abcb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25ab698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[25ad984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
</UL>

<P><STRONG><a name="[25abb84]"></a>dir_find</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = dir_find &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[25abcec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
<LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[25abb48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[25abb48]"></a>dir_register</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = dir_register &rArr; dir_find &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[25abbfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[25abc38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[25abc74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_lfn
<LI><a href="#[25abda0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[25ac214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[25abb0c]"></a>dir_remove</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25abddc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>

<P><STRONG><a name="[25abad0]"></a>get_fileinfo</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ac070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_utf
<LI><a href="#[25ac2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[25ac304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[25ad6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[25ad72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[25aba94]"></a>create_name</STRONG> (Thumb, 766 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = create_name &rArr; tchar2uni &rArr; ff_oem2uni
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[25ab47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_uni2oem
<LI><a href="#[25ac0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
<LI><a href="#[25ac160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[25aba58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[25aba58]"></a>follow_path</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = follow_path &rArr; dir_find &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25aba94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[25abb84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[25abd64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[25abe18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[25ab620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[25ada74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[25aba1c]"></a>get_ldnumber</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdrive
<LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[25ab9e0]"></a>check_fs</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[25ac304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[25ab9a4]"></a>find_volume</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[25ac2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>

<P><STRONG><a name="[25ab968]"></a>mount_volume</STRONG> (Thumb, 910 bytes, Stack size 72 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = mount_volume &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[25aba1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[25abff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[25ac2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[25ac304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25ae17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[25ae1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[25ab5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[25ab620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[25ab698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[25ad63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[25ad6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[25ad6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[25ad7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[25ad81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[25ad858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[25ad8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[25ad984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[25ad9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[25ada74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[25ab92c]"></a>validate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = validate &rArr; disk_status
</UL>
<BR>[Calls]<UL><LI><a href="#[25ae17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_expand
<LI><a href="#[25ab65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[25ab710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[25ad678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[25ad72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[25ad768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[25ad90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[25ad9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[25ada38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[25ab8f0]"></a>create_partition</STRONG> (Thumb, 418 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[25ac250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[25ac28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[25ae0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[25ae104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[25ad894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[25ab8b4]"></a>putc_bfd</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + In Cycle
<LI>Call Chain = putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[25ab8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[25ab530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
<LI><a href="#[25ab8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
<LI><a href="#[25ad7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
</UL>

<P><STRONG><a name="[25ab878]"></a>putc_flush</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = putc_flush &rArr; f_write &rArr; disk_read &rArr; vd_read &rArr; f_read &rArr;  disk_read (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25ab710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[25ab530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
<LI><a href="#[25ad7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
</UL>

<P><STRONG><a name="[25ab83c]"></a>putc_init</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = putc_init &rArr; mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[25ac1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[25ab4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[25ab530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
<LI><a href="#[25ad7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
</UL>

<P><STRONG><a name="[25a7e1c]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a7c3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[25a7cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[25a7de0]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a7cb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[25a7d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[25a6b20]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a6940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[25a69b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[25a6ae4]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25a69b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[25a6a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[25a4564]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>

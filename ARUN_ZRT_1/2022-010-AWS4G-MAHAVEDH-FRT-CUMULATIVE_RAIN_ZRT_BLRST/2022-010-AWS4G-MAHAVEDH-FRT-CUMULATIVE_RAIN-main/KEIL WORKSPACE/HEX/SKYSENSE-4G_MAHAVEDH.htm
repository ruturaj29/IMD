<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\HEX\SKYSENSE-4G_MAHAVEDH.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\HEX\SKYSENSE-4G_MAHAVEDH.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Fri Jan 13 12:57:58 2023
<BR><P>
<H3>Maximum Stack Usage =        264 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Initialize_ALL_Peripherals &rArr; UART_Init &rArr; UART_SetBaudRate &rArr; getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[248b694]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[248b568]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248b568]">NMI_Handler</a><BR>
 <LI><a href="#[248b52c]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248b52c]">HardFault_Handler</a><BR>
 <LI><a href="#[248b4f0]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248b4f0]">MemManage_Handler</a><BR>
 <LI><a href="#[248b4b4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248b4b4]">BusFault_Handler</a><BR>
 <LI><a href="#[248b478]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248b478]">UsageFault_Handler</a><BR>
 <LI><a href="#[248b43c]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248b43c]">SVC_Handler</a><BR>
 <LI><a href="#[248b400]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248b400]">DebugMon_Handler</a><BR>
 <LI><a href="#[248b3c4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248b3c4]">PendSV_Handler</a><BR>
 <LI><a href="#[248b34c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[248b34c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[248b5a4]">Reset_Handler</a>
 <LI><a href="#[248b568]">NMI_Handler</a>
 <LI><a href="#[248b52c]">HardFault_Handler</a>
 <LI><a href="#[248b4f0]">MemManage_Handler</a>
 <LI><a href="#[248b4b4]">BusFault_Handler</a>
 <LI><a href="#[248b478]">UsageFault_Handler</a>
 <LI><a href="#[248b43c]">SVC_Handler</a>
 <LI><a href="#[248b400]">DebugMon_Handler</a>
 <LI><a href="#[248b3c4]">PendSV_Handler</a>
 <LI><a href="#[247d468]">SysTick_Handler</a>
 <LI><a href="#[248ab54]">WDT_IRQHandler</a>
 <LI><a href="#[248adac]">TIMER0_IRQHandler</a>
 <LI><a href="#[248ad70]">TIMER1_IRQHandler</a>
 <LI><a href="#[248ad34]">TIMER2_IRQHandler</a>
 <LI><a href="#[248acf8]">TIMER3_IRQHandler</a>
 <LI><a href="#[2480834]">UART0_IRQHandler</a>
 <LI><a href="#[2480870]">UART1_IRQHandler</a>
 <LI><a href="#[248ac44]">UART2_IRQHandler</a>
 <LI><a href="#[24807f8]">UART3_IRQHandler</a>
 <LI><a href="#[248af50]">PWM1_IRQHandler</a>
 <LI><a href="#[248b0f4]">I2C0_IRQHandler</a>
 <LI><a href="#[248b0b8]">I2C1_IRQHandler</a>
 <LI><a href="#[248b07c]">I2C2_IRQHandler</a>
 <LI><a href="#[248ae60]">SPI_IRQHandler</a>
 <LI><a href="#[248ae24]">SSP0_IRQHandler</a>
 <LI><a href="#[248ade8]">SSP1_IRQHandler</a>
 <LI><a href="#[248afc8]">PLL0_IRQHandler</a>
 <LI><a href="#[2481d88]">RTC_IRQHandler</a>
 <LI><a href="#[2487b84]">EINT0_IRQHandler</a>
 <LI><a href="#[2487b48]">EINT1_IRQHandler</a>
 <LI><a href="#[2487b0c]">EINT2_IRQHandler</a>
 <LI><a href="#[2487ad0]">EINT3_IRQHandler</a>
 <LI><a href="#[248b34c]">ADC_IRQHandler</a>
 <LI><a href="#[252e838]">BOD_IRQHandler</a>
 <LI><a href="#[248ab90]">USB_IRQHandler</a>
 <LI><a href="#[248b298]">CAN_IRQHandler</a>
 <LI><a href="#[248b25c]">DMA_IRQHandler</a>
 <LI><a href="#[248b040]">I2S_IRQHandler</a>
 <LI><a href="#[248b130]">ENET_IRQHandler</a>
 <LI><a href="#[248aed8]">RIT_IRQHandler</a>
 <LI><a href="#[248b004]">MCPWM_IRQHandler</a>
 <LI><a href="#[248af14]">QEI_IRQHandler</a>
 <LI><a href="#[248af8c]">PLL1_IRQHandler</a>
 <LI><a href="#[248abcc]">USBActivity_IRQHandler</a>
 <LI><a href="#[248b2d4]">CANActivity_IRQHandler</a>
 <LI><a href="#[2527524]">__main</a>
 <LI><a href="#[2523528]">_sputc</a>
 <LI><a href="#[2523690]">_printf_input_char</a>
 <LI><a href="#[318170c]">_get_lc_ctype</a>
 <LI><a href="#[317e3b8]">__I$use$semihosting</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2527524]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2523e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[317bd0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[317bd0c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2527524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[317bcd0]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2523e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[317bc94]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[317bc58]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[317be38]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[317bdfc]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[317bab4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[25287a8]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[252939c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[25286f4]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2528c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[2528988]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25233fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[2528898]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25233c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[25232d0]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[318116c]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2520fe4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[317ff9c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000006))

<P><STRONG><a name="[317fe70]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000B))
<BR><BR>[Calls]<UL><LI><a href="#[31819dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[317feac]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[317ff24]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[317fdf8]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))

<P><STRONG><a name="[317fdbc]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[318170c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[317f768]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[317f7e0]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000028))

<P><STRONG><a name="[317fba0]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[317fa38]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[317f678]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[317f6f0]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[317fab0]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[317f9c0]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[317fd80]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[317fd08]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[317fc90]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[317fc18]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[317f63c]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002F))

<P><STRONG><a name="[317fb28]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[317f948]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[317e700]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[317ef34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[317da94]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[317d8b4]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[317d878]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[317d9e0]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[317db48]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[317d968]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[2523e88]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2527524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[317bcd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[2521098]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2520d14]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[252024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2520fe4]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[318116c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[2521020]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2520f30]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Initialize_ALL_Peripherals &rArr; UART_Init &rArr; UART_SetBaudRate &rArr; getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3181568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[2520f6c]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3180c08]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3181568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[317ef34]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[317e700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[317ef70]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[317eef8]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[317ebec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[248b5a4]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b568]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248b568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[248b568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b52c]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248b52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[248b52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b4f0]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248b4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[248b4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b4b4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248b4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[248b4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b478]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248b478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[248b478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b43c]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248b43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[248b43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b400]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248b400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[248b400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b3c4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248b3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[248b3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b34c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[248b34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[248b34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b2d4]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b298]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b25c]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b130]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b0f4]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b0b8]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b07c]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b040]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b004]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248afc8]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248af8c]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248af50]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248af14]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248aed8]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248ae60]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248ae24]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248ade8]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248adac]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248ad70]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248ad34]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248acf8]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248ac44]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248abcc]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248ab90]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248ab54]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[248b694]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[248a2a8]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 306 bytes, Stack size 0 bytes, system_lpc17xx.o(.text), UNUSED)

<P><STRONG><a name="[248a26c]"></a>SystemInit</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2489060]"></a>ADC_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2489a74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_GetPclk
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[2489024]"></a>ADC_GetAdcValue</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2488f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
<LI><a href="#[2488f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
</UL>
<BR>[Called By]<UL><LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
</UL>

<P><STRONG><a name="[2488fe8]"></a>Read_ADCchannels</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2489024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetAdcValue
<LI><a href="#[2525f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25264bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2526ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[252c240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
</UL>

<P><STRONG><a name="[248891c]"></a>reverse</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, convert.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24888e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intToStr
</UL>

<P><STRONG><a name="[24888e0]"></a>intToStr</STRONG> (Thumb, 72 bytes, Stack size 20 bytes, convert.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248891c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reverse
</UL>
<BR>[Called By]<UL><LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
</UL>

<P><STRONG><a name="[24888a4]"></a>ftoa</STRONG> (Thumb, 154 bytes, Stack size 72 bytes, convert.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24888e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intToStr
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2525454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2525b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[2525f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25264bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2485550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[248558c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
</UL>

<P><STRONG><a name="[2488868]"></a>ascii_integer</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, convert.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[252ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_time_date
<LI><a href="#[252cf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_date_time
</UL>

<P><STRONG><a name="[248882c]"></a>stof</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, convert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = stof &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[2524c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2524fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2525814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2525bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
</UL>

<P><STRONG><a name="[2488dcc]"></a>ftoa_signed</STRONG> (Thumb, 470 bytes, Stack size 64 bytes, convert.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2524c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2524dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[2524fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2525454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[2525634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[2525814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2525b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[247e5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_ATRHSamples
<LI><a href="#[247f5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
</UL>

<P><STRONG><a name="[2488f70]"></a>DELAY_us</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, delay.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[248378c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendDataSignals
<LI><a href="#[24837c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
<LI><a href="#[2483804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24838b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendCmdSignals
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2489024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetAdcValue
</UL>

<P><STRONG><a name="[2488fac]"></a>DELAY_ms</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DELAY_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[2488f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
</UL>
<BR>[Called By]<UL><LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[247f6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[247f718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefault_WindSensor
<LI><a href="#[247f754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[24832a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollMessage
<LI><a href="#[24833cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[24837c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
<LI><a href="#[2483804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[2484920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[248495c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Wait_for_Msg
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[2484e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[2484ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[2484efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[2484fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[2485064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24850dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24851cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[24852bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24852f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PowerOff
<LI><a href="#[2485370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2485460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
<LI><a href="#[2488250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_sec
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[2488250]"></a>DELAY_sec</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, delay.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>

<P><STRONG><a name="[2487bfc]"></a>EINT_AttachInterrupt</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, extintr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2488f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
</UL>

<P><STRONG><a name="[2487bc0]"></a>EINT_DetachInterrupt</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EINT_DetachInterrupt &rArr; GPIO_PinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[2488f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2487b84]"></a>EINT0_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2487b48]"></a>EINT1_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2487b0c]"></a>EINT2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2487ad0]"></a>EINT3_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, extintr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EINT3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2488f34]"></a>GPIO_PinFunction</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[24809d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2487bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT_DetachInterrupt
<LI><a href="#[2487bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT_AttachInterrupt
<LI><a href="#[2489024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetAdcValue
<LI><a href="#[252ba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
</UL>

<P><STRONG><a name="[248774c]"></a>GPIO_PinDirection</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[2483444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetUp
<LI><a href="#[2483804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[252ba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
</UL>

<P><STRONG><a name="[2487710]"></a>GPIO_PinWrite</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[247f6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[247f718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefault_WindSensor
<LI><a href="#[247f754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[248378c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendDataSignals
<LI><a href="#[2483804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[2483840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendLowerNibble
<LI><a href="#[248387c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendHigherNibble
<LI><a href="#[24838b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendCmdSignals
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[2484ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[2484efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[24852bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
</UL>

<P><STRONG><a name="[24876d4]"></a>GPIO_PinToggle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[2487698]"></a>GPIO_PinRead</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_PinRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2483804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
</UL>

<P><STRONG><a name="[248765c]"></a>set_ResistorMode</STRONG> (Thumb, 58 bytes, Stack size 20 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = set_ResistorMode
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
</UL>

<P><STRONG><a name="[2487620]"></a>set_OpenDrainMode</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_OpenDrainMode
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
</UL>

<P><STRONG><a name="[24855c8]"></a>myExtIntrIsr_3</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gprs.o(.text), UNUSED)

<P><STRONG><a name="[248558c]"></a>_24hr_RainFall</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24844e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteGPREG
<LI><a href="#[2484560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadGPREG
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[2525f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2485550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
</UL>

<P><STRONG><a name="[2485550]"></a>calcRainFall</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248558c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2526408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2485514]"></a>Yearly_Rain</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24844e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteGPREG
<LI><a href="#[2484560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadGPREG
<LI><a href="#[2525f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[24854d8]"></a>rtc_1call</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24844e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteGPREG
<LI><a href="#[248459c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetFullTime
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[252c240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
</UL>

<P><STRONG><a name="[248549c]"></a>rtc_2call</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rtc_2call
</UL>
<BR>[Calls]<UL><LI><a href="#[24844e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteGPREG
<LI><a href="#[2484560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadGPREG
<LI><a href="#[248459c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetFullTime
<LI><a href="#[2525634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2485460]"></a>Read_Response</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2527c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2527fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2485424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Read_Response
</UL>

<P><STRONG><a name="[2485424]"></a>Start_Read_Response</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Start_Read_Response &rArr; Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2485460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
</UL>
<BR>[Called By]<UL><LI><a href="#[2485370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[24853e8]"></a>Buffer_Flush</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buffer_Flush
</UL>
<BR>[Calls]<UL><LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2484ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[2485370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[24853ac]"></a>WaitForExpectedResponse</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WaitForExpectedResponse &rArr; Start_Read_Response &rArr; Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[24853e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush
<LI><a href="#[2485424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Read_Response
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25281cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[2484830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SMSC_Number
<LI><a href="#[2484920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[2484998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSDefaultSetting
<LI><a href="#[2484a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[2484b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Delete
<LI><a href="#[2484b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Delete_All_Msg
<LI><a href="#[2484bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_QIState
<LI><a href="#[2484c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[2484ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerON
<LI><a href="#[2484d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
<LI><a href="#[2484e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[2484f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
<LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24851cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[2485244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerOff
<LI><a href="#[2485280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PDP_Activation
<LI><a href="#[24852bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24852f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PowerOff
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
</UL>

<P><STRONG><a name="[2485370]"></a>WaitForStatus200_302</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24853e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush
<LI><a href="#[2485424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_Read_Response
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25281cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
</UL>

<P><STRONG><a name="[2485334]"></a>SendATandExpectResponse</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[2484ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[2484e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[2484fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[2485064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24850dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24851cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
</UL>

<P><STRONG><a name="[24852f8]"></a>Module_PowerOff</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
</UL>

<P><STRONG><a name="[24852bc]"></a>Module_sleep_mode</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gprs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Module_sleep_mode &rArr; WaitForExpectedResponse &rArr; Start_Read_Response &rArr; Read_Response &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2485280]"></a>Module_PDP_Activation</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
</UL>

<P><STRONG><a name="[2485244]"></a>GNSS_PowerOff</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
</UL>

<P><STRONG><a name="[2485208]"></a>ReadNavigation</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
</UL>

<P><STRONG><a name="[24851cc]"></a>GNSS_Connect</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[2484f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
</UL>

<P><STRONG><a name="[2485190]"></a>Module_deactivateBearerProfile</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2485154]"></a>MODEMGetAPN</STRONG> (Thumb, 876 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25281cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
</UL>

<P><STRONG><a name="[2485118]"></a>MODEMGetSignalStrength</STRONG> (Thumb, 778 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[25283e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24850dc]"></a>Query_NetworkRegistration</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
</UL>

<P><STRONG><a name="[24850a0]"></a>modemCheck_initialization</STRONG> (Thumb, 638 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24850dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2485064]"></a>Wait_Till_SimModule_Communication</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
</UL>

<P><STRONG><a name="[2485028]"></a>Query_Sim_Insert</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[252777c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2484f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
</UL>

<P><STRONG><a name="[2484fec]"></a>MODEMGetIMEI</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[252777c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
</UL>

<P><STRONG><a name="[2484fb0]"></a>MODEM_CheckAttention</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2484fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
</UL>

<P><STRONG><a name="[2484f74]"></a>modem_initialization</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[2485064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24851cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
</UL>

<P><STRONG><a name="[2484f38]"></a>Module_Initializing</STRONG> (Thumb, 620 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24843bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_EnableBuffer_Interrupt
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2484f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24851cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[2485244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerOff
<LI><a href="#[2485280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PDP_Activation
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484efc]"></a>RestartModule</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484ec0]"></a>ShutDownModule</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24852f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PowerOff
<LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484e84]"></a>Module_awakeup_mode</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[2484efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484e48]"></a>MODEM_SetPhoneFunctionality</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
</UL>

<P><STRONG><a name="[2484e0c]"></a>Query_Set_CLTS</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484dd0]"></a>Update_RTC</STRONG> (Thumb, 262 bytes, Stack size 72 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDateTime
<LI><a href="#[2488868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2484d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
</UL>

<P><STRONG><a name="[2484d94]"></a>MODEM_GetNetworkTime</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484d58]"></a>GNSS_PowerON</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[2484d1c]"></a>Query_GPRSRegistrationStatus</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>

<P><STRONG><a name="[2484ce0]"></a>HTTP_Post</STRONG> (Thumb, 1466 bytes, Stack size 80 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[2484ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[2484efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[2485370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25281cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
</UL>

<P><STRONG><a name="[2484ca4]"></a>HTTP_SetURL</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
</UL>

<P><STRONG><a name="[2484c68]"></a>Check_LocalIP</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484c2c]"></a>PackOffLog</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2484c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[2484ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[2484bf0]"></a>Check_QIState</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484bb4]"></a>myExtIntrIsr_1</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gprs.o(.text), UNUSED)

<P><STRONG><a name="[2484b78]"></a>GSM_Delete_All_Msg</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[2484b3c]"></a>GSM_Msg_Delete</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[2484b00]"></a>GSM_Msg_Display</STRONG> (Thumb, 706 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25281cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2484ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
</UL>

<P><STRONG><a name="[2484ac4]"></a>GSM_Msg_Read</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[24853e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[2484a88]"></a>readSMS</STRONG> (Thumb, 1184 bytes, Stack size 72 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[2483e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2484ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[2484b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Delete
<LI><a href="#[2484b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Delete_All_Msg
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2488868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[25281cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[25282bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
<LI><a href="#[25283e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484a4c]"></a>SMS_READ_Setting</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484a10]"></a>sampleTestlog</STRONG> (Thumb, 522 bytes, Stack size 176 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24843bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_EnableBuffer_Interrupt
<LI><a href="#[24843f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DisableBuffer_Interrupt
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2484a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_QIState
<LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24852bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[2485550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
</UL>

<P><STRONG><a name="[24849d4]"></a>LCD_ScrollDisplay</STRONG> (Thumb, 1306 bytes, Stack size 40 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2487698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRead
<LI><a href="#[248774c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinDirection
<LI><a href="#[2487bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT_DetachInterrupt
<LI><a href="#[2487bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT_AttachInterrupt
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[2488f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2489024]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetAdcValue
<LI><a href="#[2525f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2526408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[25264bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2526ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[2484998]"></a>SMSDefaultSetting</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[248495c]"></a>GSM_Wait_for_Msg</STRONG> (Thumb, 654 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[25281cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[25285c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[2484920]"></a>GSM_Send_Msg</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2527920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[24848e4]"></a>GSM_Calling</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[24848a8]"></a>GSM_HangCall</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
</UL>

<P><STRONG><a name="[248486c]"></a>GSM_Response_Display</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, gprs.o(.text), UNUSED)

<P><STRONG><a name="[2484830]"></a>Get_SMSC_Number</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
<LI><a href="#[25282bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>

<P><STRONG><a name="[2483444]"></a>LCD_SetUp</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_SetUp &rArr; GPIO_PinDirection
</UL>
<BR>[Calls]<UL><LI><a href="#[248774c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinDirection
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[2483408]"></a>LCD_CmdWrite</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[2483840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendLowerNibble
<LI><a href="#[248387c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendHigherNibble
<LI><a href="#[24838b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendCmdSignals
</UL>
<BR>[Called By]<UL><LI><a href="#[24831ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd16x2_create_custom_char
<LI><a href="#[24832a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollMessage
<LI><a href="#[2483354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[2483390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToNextLine
<LI><a href="#[24833cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>

<P><STRONG><a name="[24846c8]"></a>LCD_GoToLine</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_GoToLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[24832a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollMessage
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[2484e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[2484fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[2485064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24850dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2484704]"></a>LCD_Clear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_Clear &rArr; LCD_GoToLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
</UL>
<BR>[Called By]<UL><LI><a href="#[24833cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[2484e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[2484fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[2485064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24850dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24833cc]"></a>LCD_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LCD_Init &rArr; LCD_Clear &rArr; LCD_GoToLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24837c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[2483390]"></a>LCD_GoToNextLine</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2483318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>

<P><STRONG><a name="[2483354]"></a>LCD_SetCursor</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[24831b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd16x2_put_custom_char
</UL>

<P><STRONG><a name="[2483318]"></a>LCD_DisplayChar</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToNextLine
<LI><a href="#[2483750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2483228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[2483264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNumber
<LI><a href="#[24832a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollMessage
<LI><a href="#[24832dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
</UL>

<P><STRONG><a name="[24832dc]"></a>LCD_DisplayString</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_DisplayString &rArr; LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
</UL>

<P><STRONG><a name="[24832a0]"></a>LCD_ScrollMessage</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2483318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>

<P><STRONG><a name="[2483264]"></a>LCD_DisplayNumber</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = LCD_DisplayNumber &rArr; LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[2483228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
</UL>

<P><STRONG><a name="[2483228]"></a>LCD_DisplayFloatNumber</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = LCD_DisplayFloatNumber &rArr; LCD_DisplayNumber &rArr; LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNumber
<LI><a href="#[2483318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[2524c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2524ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[25251fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[2525b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
</UL>

<P><STRONG><a name="[248468c]"></a>LCD_Printf</STRONG> (Thumb, 532 bytes, Stack size 72 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = LCD_Printf &rArr; LCD_DisplayFloatNumber &rArr; LCD_DisplayNumber &rArr; LCD_DisplayChar &rArr; LCD_GoToNextLine &rArr; LCD_CmdWrite &rArr; lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2483228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[2483264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayNumber
<LI><a href="#[24832dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayString
<LI><a href="#[2483318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[2484e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[2484fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[2485064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wait_Till_SimModule_Communication
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24850dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24831ec]"></a>lcd16x2_create_custom_char</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[2483750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[24831b0]"></a>lcd16x2_put_custom_char</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2483354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCursor
<LI><a href="#[2483750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[2482cc4]"></a>CLKPWR_SetPCLKDiv</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, lpc17xx_clkpwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2482580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Init
<LI><a href="#[248288c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_SetTimeOut
</UL>

<P><STRONG><a name="[2482c88]"></a>CLKPWR_GetPCLKSEL</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2482c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetPCLK
</UL>

<P><STRONG><a name="[2482c4c]"></a>CLKPWR_GetPCLK</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, lpc17xx_clkpwr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2482c88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_GetPCLKSEL
</UL>

<P><STRONG><a name="[2482c10]"></a>CLKPWR_ConfigPPWR</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2481c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[2481d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[2482bd4]"></a>CLKPWR_Sleep</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[2482b98]"></a>CLKPWR_DeepSleep</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[2482b5c]"></a>CLKPWR_PowerDown</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[2482b20]"></a>CLKPWR_DeepPowerDown</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc17xx_clkpwr.o(.text), UNUSED)

<P><STRONG><a name="[2482580]"></a>WDT_Init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lpc17xx_wdt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2482cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_SetPCLKDiv
</UL>

<P><STRONG><a name="[24842cc]"></a>WDT_Feed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lpc17xx_wdt.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2482490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_UpdateTimeOut
<LI><a href="#[2482544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Start
<LI><a href="#[2484920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[2484c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[2484ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484d1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_GPRSRegistrationStatus
<LI><a href="#[2484e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[2484e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SetPhoneFunctionality
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[24850dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_NetworkRegistration
<LI><a href="#[2485190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24851cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[2485280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PDP_Activation
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[2482544]"></a>WDT_Start</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, lpc17xx_wdt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248288c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_SetTimeOut
<LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
</UL>

<P><STRONG><a name="[2482508]"></a>WDT_ReadTimeOutFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lpc17xx_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24824cc]"></a>WDT_ClrTimeOutFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lpc17xx_wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2482490]"></a>WDT_UpdateTimeOut</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lpc17xx_wdt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248288c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_SetTimeOut
<LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
</UL>

<P><STRONG><a name="[2482454]"></a>WDT_GetCurrentCount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lpc17xx_wdt.o(.text), UNUSED)

<P><STRONG><a name="[2481e00]"></a>RTC_ClearIntPending</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2481d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[2481dc4]"></a>RTC_GetIntPending</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2481d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[2481d88]"></a>RTC_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[2481dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetIntPending
<LI><a href="#[2481e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearIntPending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2481d4c]"></a>RTC_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2482c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[2481d10]"></a>RTCStart</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481cd4]"></a>RTC_IntDisable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481c98]"></a>RTCStop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481c5c]"></a>RTC_DeInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2482c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_ConfigPPWR
</UL>

<P><STRONG><a name="[2481c20]"></a>RTC_ResetClockTickCounter</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481be4]"></a>RTC_Cmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481ba8]"></a>RTC_CntIncrIntConfig</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481b6c]"></a>RTC_AlarmIntConfig</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481b30]"></a>RTC_SetTime</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481af4]"></a>RTC_GetTime</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481ab8]"></a>RTC_SetFullTime</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[248459c]"></a>RTC_GetFullTime</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[248549c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24854d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_1call
</UL>

<P><STRONG><a name="[2481a7c]"></a>RTC_SetAlarmTime</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481a40]"></a>RTC_GetAlarmTime</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481a04]"></a>RTC_SetFullAlarmTime</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24819c8]"></a>RTC_GetFullAlarmTime</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[248198c]"></a>RTC_CalibCounterCmd</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[2481950]"></a>RTC_CalibConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[24844e8]"></a>RTC_WriteGPREG</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[248549c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24854d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_1call
<LI><a href="#[2485514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[248558c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
</UL>

<P><STRONG><a name="[2484560]"></a>RTC_ReadGPREG</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[248549c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[2485514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[248558c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
</UL>

<P><STRONG><a name="[2484524]"></a>RTC_SetDateTime</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2484dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[252cf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_date_time
</UL>

<P><STRONG><a name="[24845d8]"></a>RTC_GetDateTime</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[252c18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[252d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[252d0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>

<P><STRONG><a name="[2481914]"></a>RTCSetAlarmMask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2480a14]"></a>UART_SetBaudRate</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = UART_SetBaudRate &rArr; getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[2525454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[24809d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[24809d8]"></a>UART_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = UART_Init &rArr; UART_SetBaudRate &rArr; getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[2480a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudRate
<LI><a href="#[2488f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[248099c]"></a>UART_RxChar</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2480924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxString
<LI><a href="#[252ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_time_date
<LI><a href="#[252cf60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_date_time
<LI><a href="#[252cfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[252d014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_foldername
<LI><a href="#[252d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[2480960]"></a>UART_RxChar3</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[2484344]"></a>UART_TxChar</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24808ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[24808e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxNumber
<LI><a href="#[2480924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxString
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[2484920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
</UL>

<P><STRONG><a name="[2484308]"></a>UART_TxString</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_TxString
</UL>
<BR>[Calls]<UL><LI><a href="#[2484344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
</UL>
<BR>[Called By]<UL><LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[247f6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[247f718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefault_WindSensor
<LI><a href="#[247f754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[2484380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[2484830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SMSC_Number
<LI><a href="#[24848a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_HangCall
<LI><a href="#[24848e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Calling
<LI><a href="#[2484920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[2484998]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSDefaultSetting
<LI><a href="#[2484a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[2484b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Delete
<LI><a href="#[2484b78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Delete_All_Msg
<LI><a href="#[2484bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_QIState
<LI><a href="#[2484c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[2484ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484d58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerON
<LI><a href="#[2484d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
<LI><a href="#[2484e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[2484f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
<LI><a href="#[2484fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckAttention
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24851cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_Connect
<LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[2485244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GNSS_PowerOff
<LI><a href="#[2485280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PDP_Activation
<LI><a href="#[24852bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[24852f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_PowerOff
<LI><a href="#[2485334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendATandExpectResponse
</UL>

<P><STRONG><a name="[2480924]"></a>UART_RxString</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248099c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[2484344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
</UL>

<P><STRONG><a name="[24808e8]"></a>UART_TxNumber</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
</UL>
<BR>[Called By]<UL><LI><a href="#[24808ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[2484380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
</UL>

<P><STRONG><a name="[24808ac]"></a>UART_TxFloatNumber</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24808e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxNumber
<LI><a href="#[2484344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
<LI><a href="#[2524c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2524ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[25251fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[2525b20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2484380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
</UL>

<P><STRONG><a name="[2484380]"></a>UART_Printf</STRONG> (Thumb, 614 bytes, Stack size 72 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24808ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[24808e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxNumber
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2484344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxChar
<LI><a href="#[2524dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[2480870]"></a>UART1_IRQHandler</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2480834]"></a>UART0_IRQHandler</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24807f8]"></a>UART3_IRQHandler</STRONG> (Thumb, 224 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24807bc]"></a>UART3_EnableBuffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[2480780]"></a>UART3_DisableBuffer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[24843bc]"></a>UART1_EnableBuffer_Interrupt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24843f8]"></a>UART1_DisableBuffer_Interrupt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[2480744]"></a>UART0_EnableBuffer_Interrupt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2480708]"></a>UART0_DisableBuffer_Interrupt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[247f790]"></a>Buffer_Flush_UART0</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buffer_Flush_UART0
</UL>
<BR>[Calls]<UL><LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[247f664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor_InterruptBuffer
<LI><a href="#[247f6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[247f718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefault_WindSensor
<LI><a href="#[247f754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
</UL>

<P><STRONG><a name="[247f754]"></a>Configure_WindSensor</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Configure_WindSensor &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[247f790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[247f718]"></a>SetDefault_WindSensor</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, wswd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247f790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>

<P><STRONG><a name="[247f6dc]"></a>CheckCommunication_WindSensor</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CheckCommunication_WindSensor &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[247f790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[247f6a0]"></a>Trignometric_Conversion</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Trignometric_Conversion &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[2523f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2524608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
</UL>

<P><STRONG><a name="[24844ac]"></a>Read_WindSensor</STRONG> (Thumb, 1070 bytes, Stack size 16 bytes, wswd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = Read_WindSensor &rArr; Trignometric_Conversion &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[247f6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
<LI><a href="#[247f790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[248882c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2525f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[2526048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25262dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[247f664]"></a>Read_WindSensor_InterruptBuffer</STRONG> (Thumb, 406 bytes, Stack size 8 bytes, wswd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247f790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[247f628]"></a>average_windDirection</STRONG> (Thumb, 346 bytes, Stack size 56 bytes, wswd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2484308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxString
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2524824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[2526048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25262dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2526408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2526ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[247f5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
</UL>

<P><STRONG><a name="[247f5ec]"></a>Average_WindSamples</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, wswd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[2526408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2526ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[247f0c4]"></a>i2c0_init</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[247e674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ATRH
</UL>

<P><STRONG><a name="[247f088]"></a>i2c0_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[247e674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_ATRH
</UL>

<P><STRONG><a name="[247f04c]"></a>i2c0_start</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[247e638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ATRH
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[247f010]"></a>i2c0_stop</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[247e638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ATRH
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[247efd4]"></a>i2c0_Address</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[247e638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ATRH
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[247ef98]"></a>i2c0_Write</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[247e638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_ATRH
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[247ef5c]"></a>i2c0_Read</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[247e674]"></a>Init_ATRH</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atrh.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247f088]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_enable
<LI><a href="#[247f0c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_init
</UL>

<P><STRONG><a name="[247e638]"></a>start_ATRH</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, atrh.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247ef98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Write
<LI><a href="#[247efd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Address
<LI><a href="#[247f010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_stop
<LI><a href="#[247f04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_start
</UL>

<P><STRONG><a name="[2483e94]"></a>readATRH</STRONG> (Thumb, 588 bytes, Stack size 72 bytes, atrh.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247ef5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Read
<LI><a href="#[247ef98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Write
<LI><a href="#[247efd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_Address
<LI><a href="#[247f010]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_stop
<LI><a href="#[247f04c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c0_start
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2524b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[2524dc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[2525bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[2525f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2526408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2526ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2526da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
</UL>

<P><STRONG><a name="[247e5fc]"></a>Average_ATRHSamples</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, atrh.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[2524ef0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[2525814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[247d5d0]"></a>SysTick_Init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
</UL>

<P><STRONG><a name="[247d594]"></a>SysTick_Start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[2483e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252cd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writelog
</UL>

<P><STRONG><a name="[247d558]"></a>SysTick_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[2483e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252cd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writelog
</UL>

<P><STRONG><a name="[247d51c]"></a>SysTick_AttachInterrupt</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)

<P><STRONG><a name="[247d4e0]"></a>SysTick_GetMsTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)

<P><STRONG><a name="[247d4a4]"></a>SysTick_GetUsTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)

<P><STRONG><a name="[247d468]"></a>SysTick_Handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, systick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[247d42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_timerproc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[252e838]"></a>BOD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bod.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[252e7fc]"></a>BOD_Init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, bod.o(.text), UNUSED)

<P><STRONG><a name="[252d26c]"></a>disk_initialize</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252ddac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_init
<LI><a href="#[252dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[252de9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off
<LI><a href="#[252ded8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[252df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[252e040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[252d230]"></a>disk_status</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252dd70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>

<P><STRONG><a name="[252d1f4]"></a>disk_read</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252dd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_read
<LI><a href="#[252dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[252de60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[252df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
</UL>
<BR>[Called By]<UL><LI><a href="#[252a83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[252d1b8]"></a>disk_write</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[252de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[252df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
</UL>
<BR>[Called By]<UL><LI><a href="#[252a788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[252a83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[252aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[252af80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252b160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[252c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[252d17c]"></a>disk_ioctl</STRONG> (Thumb, 750 bytes, Stack size 64 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_ioctl
<LI><a href="#[252dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[252de60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[252df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[252df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[252df8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[252e040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[252aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[247d42c]"></a>disk_timerproc</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[247d468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[252d140]"></a>f_CreateFolder</STRONG> (Thumb, 44 bytes, Stack size 1104 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252d104]"></a>sd_append_file</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[252caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[252d0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>

<P><STRONG><a name="[252d0c8]"></a>create_file</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[252c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252d104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
</UL>
<BR>[Called By]<UL><LI><a href="#[252d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
</UL>

<P><STRONG><a name="[252d08c]"></a>create_folder</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[252c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[252cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
<LI><a href="#[252d0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>
<BR>[Called By]<UL><LI><a href="#[252cd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writelog
</UL>

<P><STRONG><a name="[252d050]"></a>get_name</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248099c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[2527920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[252ce70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_dir
<LI><a href="#[252ceac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_file_remove
<LI><a href="#[252cee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_file
<LI><a href="#[252cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
</UL>

<P><STRONG><a name="[252d014]"></a>get_foldername</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248099c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[252cfd8]"></a>write_data</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248099c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[2527920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[252cf9c]"></a>getdetails</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2527e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[252c7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[252c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252cab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[252d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[252cf60]"></a>set_date_time</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248099c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[2484524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDateTime
<LI><a href="#[2488868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
</UL>

<P><STRONG><a name="[252cf24]"></a>sd_filesize</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[252cee8]"></a>sd_create_file</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[252d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[252ceac]"></a>sd_file_remove</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[252ce70]"></a>sd_create_dir</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[252d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[252ce34]"></a>sd_time_date</STRONG> (Thumb, 204 bytes, Stack size 80 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[248099c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RxChar
<LI><a href="#[2488868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252cdf8]"></a>sd_format</STRONG> (Thumb, 48 bytes, Stack size 1032 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[252cdbc]"></a>xatoi</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)

<P><STRONG><a name="[252cd80]"></a>show_volume_stat</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252ca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[252ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[252dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
<LI><a href="#[252dcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>

<P><STRONG><a name="[252cd44]"></a>dir_list</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[252c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[252dcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>

<P><STRONG><a name="[252cd08]"></a>Writelog</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247d558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[247d594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[252d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
</UL>
<BR>[Called By]<UL><LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
</UL>

<P><STRONG><a name="[24847f4]"></a>Createlog</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247d558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[247d594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[252c858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[252caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2484b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[252c240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
</UL>

<P><STRONG><a name="[252cccc]"></a>retrylog</STRONG> (Thumb, 480 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247d558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[247d594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2527920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[252c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[252caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[252dcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>
<BR>[Called By]<UL><LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
</UL>

<P><STRONG><a name="[252cc90]"></a>log_SMS</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2527920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[252caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[252dcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>

<P><STRONG><a name="[2483e58]"></a>readconfigfile</STRONG> (Thumb, 124 bytes, Stack size 1080 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247d558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[247d594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[252caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[252dcbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_rc
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[2483de0]"></a>smsUpdateConfig</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247d558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Stop
<LI><a href="#[247d594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Start
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
</UL>

<P><STRONG><a name="[252c240]"></a>Slog</STRONG> (Thumb, 198 bytes, Stack size 72 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[24854d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_1call
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[252c204]"></a>PacketLog</STRONG> (Thumb, 1166 bytes, Stack size 96 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247e5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_ATRHSamples
<LI><a href="#[247f5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[24842cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Feed
<LI><a href="#[24843bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_EnableBuffer_Interrupt
<LI><a href="#[24843f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DisableBuffer_Interrupt
<LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[2484a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484bf0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_QIState
<LI><a href="#[2484c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackOffLog
<LI><a href="#[2484c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[2484d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
<LI><a href="#[2484e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[2484ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[2484efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24852bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[2485550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[252cd08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Writelog
</UL>

<P><STRONG><a name="[252c1c8]"></a>SendingLog</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24843bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_EnableBuffer_Interrupt
<LI><a href="#[24843f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DisableBuffer_Interrupt
<LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[2484a4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_READ_Setting
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484c68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_LocalIP
<LI><a href="#[2484d94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetNetworkTime
<LI><a href="#[2484e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Set_CLTS
<LI><a href="#[2484e84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_awakeup_mode
<LI><a href="#[2484ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShutDownModule
<LI><a href="#[2484efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartModule
<LI><a href="#[2484f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_Initializing
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_deactivateBearerProfile
<LI><a href="#[24852bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[252c18c]"></a>get_fattime</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, log.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252bac0]"></a>NVIC_SetPriorities</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriorities
</UL>
<BR>[Calls]<UL><LI><a href="#[252bd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[252ba84]"></a>Configure_GPIO_Peripherals</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Configure_GPIO_Peripherals &rArr; set_ResistorMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2487620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_OpenDrainMode
<LI><a href="#[248765c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ResistorMode
<LI><a href="#[248774c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinDirection
<LI><a href="#[2488f34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[252ba48]"></a>Initialize_ALL_Peripherals</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Initialize_ALL_Peripherals &rArr; UART_Init &rArr; UART_SetBaudRate &rArr; getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[247d5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Init
<LI><a href="#[24809d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[2481d4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[24833cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[2483444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetUp
<LI><a href="#[2489060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[252ba0c]"></a>main</STRONG> (Thumb, 282 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = main &rArr; Initialize_ALL_Peripherals &rArr; UART_Init &rArr; UART_SetBaudRate &rArr; getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[247f6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCommunication_WindSensor
<LI><a href="#[247f754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_WindSensor
<LI><a href="#[2480744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_EnableBuffer_Interrupt
<LI><a href="#[2481914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetAlarmMask
<LI><a href="#[24824cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_ClrTimeOutFlag
<LI><a href="#[2482508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_ReadTimeOutFlag
<LI><a href="#[24843f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DisableBuffer_Interrupt
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24845d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDateTime
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24846c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GoToLine
<LI><a href="#[2484704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[24852bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Module_sleep_mode
<LI><a href="#[248549c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[2487bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EINT_DetachInterrupt
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
<LI><a href="#[248a26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[252ba48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initialize_ALL_Peripherals
<LI><a href="#[252ba84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Configure_GPIO_Peripherals
<LI><a href="#[252bac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriorities
<LI><a href="#[252bd90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[2520f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[252c90c]"></a>f_mount</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[2483e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[252cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[252cd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
<LI><a href="#[252ce70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_dir
<LI><a href="#[252cee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_file
<LI><a href="#[252cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
<LI><a href="#[252d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[252d104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
<LI><a href="#[252d140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_CreateFolder
</UL>

<P><STRONG><a name="[252c8d0]"></a>f_open</STRONG> (Thumb, 516 bytes, Stack size 104 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[252ae54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[252ae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[252aff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252b0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[252b37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[252b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[252c18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[252d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[2483e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[252cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252cee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_file
<LI><a href="#[252d0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
<LI><a href="#[252dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_ioctl
</UL>

<P><STRONG><a name="[252c81c]"></a>f_read</STRONG> (Thumb, 506 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252b0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[252b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[252d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[252c9fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[252dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_ioctl
<LI><a href="#[252dd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_read
</UL>

<P><STRONG><a name="[252a83c]"></a>f_write</STRONG> (Thumb, 568 bytes, Stack size 56 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[252afbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[252b0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[252b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[252d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[252a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_flush
<LI><a href="#[252a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[252c72c]"></a>f_sync</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[252ae54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[252b3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[252c18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[252caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[252caec]"></a>f_close</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[2483e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[252cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252cee8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_file
<LI><a href="#[252d104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
</UL>

<P><STRONG><a name="[252a800]"></a>f_chdrive</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252ab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
</UL>

<P><STRONG><a name="[252cb28]"></a>f_chdir</STRONG> (Thumb, 90 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252ae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[252d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
</UL>

<P><STRONG><a name="[252a7c4]"></a>f_getcwd</STRONG> (Thumb, 328 bytes, Stack size 376 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252abfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[252acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[252ae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[252c9c0]"></a>f_lseek</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[252afbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252b0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[252d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252d104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
<LI><a href="#[252dcf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_ioctl
<LI><a href="#[252dd34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vd_read
</UL>

<P><STRONG><a name="[252c894]"></a>f_opendir</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252ae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[252cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[252cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
<LI><a href="#[252dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[252cab0]"></a>f_closedir</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[252cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
</UL>

<P><STRONG><a name="[252c7e0]"></a>f_readdir</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[252abfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[252acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[252cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[252cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
<LI><a href="#[252dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[252c768]"></a>f_stat</STRONG> (Thumb, 62 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252abfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[252d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[252d0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>

<P><STRONG><a name="[252ca74]"></a>f_getfree</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[252b430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[252cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[252cd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
<LI><a href="#[252cf24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_filesize
</UL>

<P><STRONG><a name="[252a788]"></a>f_truncate</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[252aff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[252c6f0]"></a>f_unlink</STRONG> (Thumb, 196 bytes, Stack size 120 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252ac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[252acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[252ae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252aff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>
<BR>[Called By]<UL><LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252ceac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_file_remove
</UL>

<P><STRONG><a name="[252c984]"></a>f_mkdir</STRONG> (Thumb, 280 bytes, Stack size 96 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[252ae54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[252af80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[252afbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[252aff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[252b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[252b37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[252c18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[252ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_time_date
<LI><a href="#[252ce70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_create_dir
<LI><a href="#[252d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[252d140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_CreateFolder
</UL>

<P><STRONG><a name="[252c7a4]"></a>f_rename</STRONG> (Thumb, 282 bytes, Stack size 160 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252ac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[252ae54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[252ae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[252b0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[252a74c]"></a>f_chmod</STRONG> (Thumb, 98 bytes, Stack size 80 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[252a710]"></a>f_utime</STRONG> (Thumb, 90 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252b37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
</UL>

<P><STRONG><a name="[252ca38]"></a>f_getlabel</STRONG> (Thumb, 202 bytes, Stack size 96 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[252cd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
</UL>

<P><STRONG><a name="[252a6d4]"></a>f_setlabel</STRONG> (Thumb, 306 bytes, Stack size 104 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[252a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_uni2oem
<LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[252aecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252b1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
<LI><a href="#[252b28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[252b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>

<P><STRONG><a name="[252a698]"></a>f_expand</STRONG> (Thumb, 332 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[252b034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>

<P><STRONG><a name="[252c948]"></a>f_mkfs</STRONG> (Thumb, 1770 bytes, Stack size 152 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[252ab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[252b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[252b37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[252b3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[252c18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[252d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[252cdf8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_format
</UL>

<P><STRONG><a name="[252c9fc]"></a>f_gets</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[2483e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[252cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
</UL>

<P><STRONG><a name="[252a65c]"></a>f_putc</STRONG> (Thumb, 34 bytes, Stack size 88 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_init
<LI><a href="#[252a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_flush
<LI><a href="#[252a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[252c858]"></a>f_puts</STRONG> (Thumb, 44 bytes, Stack size 88 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_init
<LI><a href="#[252a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_flush
<LI><a href="#[252a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>
<BR>[Called By]<UL><LI><a href="#[2483de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smsUpdateConfig
<LI><a href="#[24847f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Createlog
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252d104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_append_file
</UL>

<P><STRONG><a name="[252a620]"></a>f_printf</STRONG> (Thumb, 712 bytes, Stack size 168 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_init
<LI><a href="#[252a9a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_flush
<LI><a href="#[252a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[252a5a8]"></a>ff_uni2oem</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, syscall.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252abc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[252b19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_utf
</UL>

<P><STRONG><a name="[252a5e4]"></a>ff_oem2uni</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, syscall.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252b1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
</UL>

<P><STRONG><a name="[252a56c]"></a>ff_wtoupper</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, syscall.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252abc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[252ae18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[2529978]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2523528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[2523654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[24848e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Calling
<LI><a href="#[2484920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Read
<LI><a href="#[2484b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[2484b3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Delete
<LI><a href="#[2484ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[252c240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
<LI><a href="#[252ce34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_time_date
<LI><a href="#[252d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
<LI><a href="#[252d0c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_file
</UL>

<P><STRONG><a name="[2529630]"></a>_printf_pre_padding</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[2523780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[2529504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[25295f4]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[2523780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[2529504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[2529504]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25295f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[2529630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[2523438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[252939c]"></a>_printf_int_dec</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[2522b8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[2523780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[25287a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[2528c94]"></a>__printf</STRONG> (Thumb, 324 bytes, Stack size 40 bytes, __printf_flags_wp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25286f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[2523654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[25285c8]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25231e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2523a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[248495c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Wait_for_Msg
</UL>

<P><STRONG><a name="[25283e8]"></a>strtok</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, strtok.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2523078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtok_internal
</UL>
<BR>[Called By]<UL><LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
</UL>

<P><STRONG><a name="[25282bc]"></a>strchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, strchr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2484830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SMSC_Number
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[24871ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_gnss_get_param
</UL>

<P><STRONG><a name="[25281cc]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[248495c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Wait_for_Msg
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2485154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetAPN
<LI><a href="#[2485370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatus200_302
<LI><a href="#[24853ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForExpectedResponse
</UL>

<P><STRONG><a name="[25280dc]"></a>strcpy</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[247f5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[247f664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor_InterruptBuffer
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_RTC
<LI><a href="#[2484f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modem_initialization
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
<LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[252c240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
<LI><a href="#[252dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[2527fec]"></a>strncmp</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2485460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
</UL>

<P><STRONG><a name="[2527efc]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[247f664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor_InterruptBuffer
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[2484920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[2484ca4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_SetURL
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[2485460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
<LI><a href="#[252dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[2527e0c]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2527c2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[252cf9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getdetails
</UL>

<P><STRONG><a name="[2527dd0]"></a>__rt_memcpy</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[2527d94]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[2527c68]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2485460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Response
</UL>

<P><STRONG><a name="[2527c2c]"></a>__rt_memmove</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2527e0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[2527bf0]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[2527ac4]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[247f790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush_UART0
<LI><a href="#[2484920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[2484a10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sampleTestlog
<LI><a href="#[2484a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readSMS
<LI><a href="#[2484b00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Msg_Display
<LI><a href="#[2484ce0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HTTP_Post
<LI><a href="#[2484fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[24850a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modemCheck_initialization
<LI><a href="#[2485118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetSignalStrength
<LI><a href="#[24853e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buffer_Flush
<LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[252777c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[252c1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendingLog
<LI><a href="#[252c204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PacketLog
<LI><a href="#[252c240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slog
<LI><a href="#[252d014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_foldername
<LI><a href="#[252d08c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_folder
</UL>

<P><STRONG><a name="[2527a88]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252786c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[2527a4c]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[2527920]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2484920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GSM_Send_Msg
<LI><a href="#[252cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252cfd8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[252d050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_name
</UL>

<P><STRONG><a name="[25278e4]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[25278a8]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[252786c]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2527a88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[252777c]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2484fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEMGetIMEI
<LI><a href="#[2485028]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Query_Sim_Insert
<LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
</UL>

<P><STRONG><a name="[252768c]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2527650]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2527614]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2523a50]"></a>__aeabi_errno_addr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2520990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[25231e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2523870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[25238ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
<LI><a href="#[25285c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[2523a14]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[25239d8]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[25238ac]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2523a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[2523870]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[2523a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[2521584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[2523f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[2523780]"></a>_printf_int_common</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[25295f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[2529630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[252939c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[2523654]"></a>_printf_char_common</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, _printf_char_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2528c94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[2523528]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2529978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[2523438]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[2529504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[25233c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[25233fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[25233fc]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[2523438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2528988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[25233c0]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[2523438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[2528898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[25231e0]"></a>strtol</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, strtol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2520990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[2520be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[2523a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[25285c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[2523078]"></a>__strtok_internal</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, strtok_int.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2520774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strspn
<LI><a href="#[2520864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcspn
</UL>
<BR>[Called By]<UL><LI><a href="#[25283e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtok
</UL>

<P><STRONG><a name="[2522f10]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2522cf4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[2527dd0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[2522ed4]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2522e98]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2522e5c]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2522d6c]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[2522d30]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[2522cf4]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522f10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[2522cb8]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[2522c7c]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[2522b8c]"></a>__rt_udiv10</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252939c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[25213a4]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2521368]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252024c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[252132c]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[2520be8]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31819dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[25231e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[2520990]"></a>_strtoul</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, _strtoul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2523a50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[31818ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[25231e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[2520864]"></a>strcspn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, strcspn.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2523078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtok_internal
</UL>

<P><STRONG><a name="[2520774]"></a>strspn</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, strspn.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2523078]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtok_internal
</UL>

<P><STRONG><a name="[252024c]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[248b694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[2521368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2520d14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[31819dc]"></a>__rt_locale</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2520be8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[317fe70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[31818ec]"></a>_chval</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _chval.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2520990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[3181568]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3180c08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[2520f30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[3180a64]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[318170c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[317ebec]"></a>_sys_exit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[317eef8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[317e3b8]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sys_exit.o(.text)
</UL>
<P><STRONG><a name="[317e37c]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[25218cc]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 642 bytes, Stack size 96 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[2520684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[2521ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25264bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2526714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2526ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2526da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2526e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2523f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2524608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[2521c14]"></a>__kernel_cos</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2521b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2521ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2526714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2526da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2526e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2523f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2524608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[2521b24]"></a>__kernel_poly</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2521728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[2521c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[2521728]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 56 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2521b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2521ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2526714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2526da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2526e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2523f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2524608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[2524824]"></a>atan</STRONG> (Thumb, 474 bytes, Stack size 48 bytes, atan.o(i.atan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2521b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2521ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[2526048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2526ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2526da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2526e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
</UL>

<P><STRONG><a name="[2524194]"></a>copysign</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pow.o(i.copysign), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[2524608]"></a>cos</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[2521728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2521c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2521ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[2523870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[247f6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
</UL>

<P><STRONG><a name="[2524158]"></a>pow</STRONG> (Thumb, 2244 bytes, Stack size 208 bytes, pow.o(i.pow), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2521584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[2521b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2521ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[2523870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[2524194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copysign
<LI><a href="#[2526048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25264bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2526ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2526da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2526e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
</UL>

<P><STRONG><a name="[2523f3c]"></a>sin</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[2521728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2521c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2521ee4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[2523870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[247f6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
</UL>

<P><STRONG><a name="[2521584]"></a>sqrt</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrt.o(i.sqrt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2520558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[2523870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[25262dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[318170c]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[3180a64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[317fdbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[2527290]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Called By]<UL><LI><a href="#[247f5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[2480ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[2484380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[248468c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Printf
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[248549c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[24854d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_1call
<LI><a href="#[2485514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[2485550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[248558c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
</UL>

<P><STRONG><a name="[2527254]"></a>_d2f</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[2527218]"></a>__fpl_inf_d2f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, d2f.o(x$fpl$d2f), UNUSED)

<P><STRONG><a name="[2526ed0]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[247f6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
<LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[2485514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[2485550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[248558c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[2521728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2521b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[2526e94]"></a>_dadd</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[2526f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[2526e58]"></a>__fpl_inf_dadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)

<P><STRONG><a name="[2522a9c]"></a>__fpl_dcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck.o(x$fpl$dcheck))
<BR><BR>[Calls]<UL><LI><a href="#[252042c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[2520684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[2522880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
<LI><a href="#[2526174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[2526a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[2526d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[2526e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[2522970]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252042c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[2520558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[2521ea8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scalbn
<LI><a href="#[25266d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[2527254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[2522880]"></a>__fpl_dcmp_InfNaN</STRONG> (Thumb, 120 bytes, Stack size 4 bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252033c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[2522a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[252600c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
<LI><a href="#[25262a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[25268b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[2522844]"></a>__fpl_inf_dcmp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[252240c]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252033c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
<LI><a href="#[25225ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[2524af4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
<LI><a href="#[2524d88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[25255f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[25223d0]"></a>__fpl_inf_fcmp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fcmpin.o(x$fpl$dcmpinfnan), UNUSED)

<P><STRONG><a name="[2526ad4]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[247f5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[2526a98]"></a>_ddiv</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[2526138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_inf_dmul
<LI><a href="#[2526a20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv_mantissas
</UL>

<P><STRONG><a name="[2526a5c]"></a>__fpl_inf_ddiv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ddiv.o(x$fpl$ddiv), UNUSED)

<P><STRONG><a name="[2526a20]"></a>_ddiv_mantissas</STRONG> (Thumb, 324 bytes, Stack size 20 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2526a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[25268f4]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Called By]<UL><LI><a href="#[2480f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isIntValue
</UL>

<P><STRONG><a name="[25268b8]"></a>_dcmpeq</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[2526714]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[2480f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isIntValue
<LI><a href="#[2521728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2521c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[25266d8]"></a>_dfix</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[252669c]"></a>__fpl_inf_dfix</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dfix.o(x$fpl$dfix), UNUSED)

<P><STRONG><a name="[25264bc]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[2480f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isIntValue
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[2526480]"></a>_dflt</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[2526444]"></a>__dflt_normalise</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dflt_clz.o(x$fpl$dflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[25263cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfltu
</UL>

<P><STRONG><a name="[2526408]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[247f5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_WindSamples
<LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2485550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
</UL>

<P><STRONG><a name="[25263cc]"></a>_dfltu</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2526444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__dflt_normalise
</UL>

<P><STRONG><a name="[25262dc]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Called By]<UL><LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[2480ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[2521584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[25262a0]"></a>_dcmple</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[25261b0]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[247f6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Trignometric_Conversion
<LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2485550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calcRainFall
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
<LI><a href="#[2521728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2521b24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[2521c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[2526174]"></a>_dmul</STRONG> (Thumb, 440 bytes, Stack size 16 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[2526138]"></a>__fpl_inf_dmul</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2526a98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[2520684]"></a>_drem</STRONG> (Thumb, 396 bytes, Stack size 16 bytes, drem_clz.o(x$fpl$drem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _drem
</UL>
<BR>[Calls]<UL><LI><a href="#[2522a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>
<BR>[Called By]<UL><LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[2520648]"></a>__fpl_inf_drem</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, drem_clz.o(x$fpl$drem), UNUSED)

<P><STRONG><a name="[2526048]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Called By]<UL><LI><a href="#[247f628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;average_windDirection
<LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[252600c]"></a>_drcmple</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[2526e1c]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2480ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[2521728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2521c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[2526de0]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2526f0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[2526f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[2520558]"></a>_dsqrt</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[2521584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[252051c]"></a>__fpl_inf_dsqrt</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dsqrt.o(x$fpl$dsqrt), UNUSED)

<P><STRONG><a name="[2526da4]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
<LI><a href="#[2480ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[2521728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2521c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[2526d68]"></a>_dsub</STRONG> (Thumb, 572 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[2526f48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[2526d2c]"></a>__fpl_inf_dsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)

<P><STRONG><a name="[2522718]"></a>__dunder</STRONG> (Thumb, 234 bytes, Stack size 4 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[25226dc]"></a>__dunder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dunder.o(x$fpl$dunder), UNUSED)

<P><STRONG><a name="[2525f1c]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[2480ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[24844ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_WindSensor
<LI><a href="#[24849d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ScrollDisplay
<LI><a href="#[2485514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Yearly_Rain
<LI><a href="#[248558c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_24hr_RainFall
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[2488fe8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_ADCchannels
</UL>

<P><STRONG><a name="[2525ee0]"></a>_f2d</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25224fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[2525ea4]"></a>__fpl_inf_f2d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, f2d.o(x$fpl$f2d), UNUSED)

<P><STRONG><a name="[2525bd4]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Called By]<UL><LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[248882c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
</UL>

<P><STRONG><a name="[2525b98]"></a>_fadd</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25225ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[2525c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[2525b5c]"></a>__fpl_inf_fadd</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)

<P><STRONG><a name="[25225ec]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck.o(x$fpl$fcheck), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252042c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[252240c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[2524c5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[25257d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[2525a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[2525b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[25224fc]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252042c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[25251c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[2525418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[2525ee0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[2525814]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[247e5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_ATRHSamples
<LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[248882c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[25257d8]"></a>_fdiv</STRONG> (Thumb, 476 bytes, Stack size 4 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25225ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[252579c]"></a>__fpl_inf_fdiv</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fdiv.o(x$fpl$fdiv), UNUSED)

<P><STRONG><a name="[2525634]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, feqf.o(x$fpl$feqf))
<BR><BR>[Called By]<UL><LI><a href="#[2480ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[248549c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_2call
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[25255f8]"></a>_fcmpeq</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252240c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[2525454]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Called By]<UL><LI><a href="#[2480a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudRate
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[2525418]"></a>_ffix</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25224fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[25253dc]"></a>__fpl_inf_ffix</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ffix.o(x$fpl$ffix), UNUSED)

<P><STRONG><a name="[25251fc]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Called By]<UL><LI><a href="#[24808ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[2483228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
</UL>

<P><STRONG><a name="[25251c0]"></a>_ffixu</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25224fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>

<P><STRONG><a name="[2525184]"></a>__fpl_inf_ffixu</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, ffixu.o(x$fpl$ffixu), UNUSED)

<P><STRONG><a name="[2524fa4]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[248882c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[2524f68]"></a>_fflt</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[2524f2c]"></a>__fflt_normalise</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fflt_clz.o(x$fpl$fflt), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2524eb4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffltu
</UL>

<P><STRONG><a name="[2524ef0]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[247e5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Average_ATRHSamples
<LI><a href="#[24808ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[2483228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
</UL>

<P><STRONG><a name="[2524eb4]"></a>_ffltu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2524f2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fflt_normalise
</UL>

<P><STRONG><a name="[2524dc4]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
<LI><a href="#[2484380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Printf
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[2524d88]"></a>_fcmple</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252240c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[2524c98]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Called By]<UL><LI><a href="#[24808ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[2483228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
<LI><a href="#[248882c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stof
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[2524c5c]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25225ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
</UL>

<P><STRONG><a name="[2524c20]"></a>__fpl_inf_fmul</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[25222e0]"></a>__fpl_normalise2</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, fnorm2_clz.o(x$fpl$fnorm2), UNUSED)

<P><STRONG><a name="[2524b30]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[2480ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[2483e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readATRH
</UL>

<P><STRONG><a name="[2524af4]"></a>_frcmple</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252240c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[2525b20]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[24808ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TxFloatNumber
<LI><a href="#[2483228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayFloatNumber
<LI><a href="#[24888a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
</UL>

<P><STRONG><a name="[2525ae4]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2525c10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[2525c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[2525aa8]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[2525a6c]"></a>_fsub</STRONG> (Thumb, 282 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25225ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[2525c4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[2525a30]"></a>__fpl_inf_fsub</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)

<P><STRONG><a name="[25221f0]"></a>__funder</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[25221b4]"></a>__funder_d</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, funder.o(x$fpl$funder), UNUSED)

<P><STRONG><a name="[252042c]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[252033c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[25224fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[25225ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[2522970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
<LI><a href="#[2522a9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[2521ee4]"></a>__ARM_scalbn</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Called By]<UL><LI><a href="#[2521728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[25218cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[2521c14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[2523f3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[2524158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[2524608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[2524824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[2521ea8]"></a>scalbn</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2522970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[2521e6c]"></a>__fpl_inf_scalbn</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, scalbn.o(x$fpl$scalbn), UNUSED)

<P><STRONG><a name="[252033c]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[252042c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[252240c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[2522880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[2521d7c]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, usenofp.o(x$fpl$usenofp), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[2489a74]"></a>adc_GetPclk</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2489060]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[24871ac]"></a>gsm_gnss_get_param</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25282bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strchr
</UL>
<BR>[Called By]<UL><LI><a href="#[2487170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_gps
</UL>

<P><STRONG><a name="[2487170]"></a>store_gps</STRONG> (Thumb, 436 bytes, Stack size 64 bytes, gprs.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24871ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsm_gnss_get_param
<LI><a href="#[2488868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ascii_integer
<LI><a href="#[2488dcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ftoa_signed
<LI><a href="#[2524c98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[2524fa4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2525814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2525bd4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[252777c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[2527ac4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2485208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNavigation
</UL>

<P><STRONG><a name="[24838b8]"></a>lcd_SendCmdSignals</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_SendCmdSignals &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[2488f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
</UL>
<BR>[Called By]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[24837c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
</UL>

<P><STRONG><a name="[248387c]"></a>lcd_SendHigherNibble</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_SendHigherNibble &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[2483750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
<LI><a href="#[24837c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_Reset
</UL>

<P><STRONG><a name="[2483840]"></a>lcd_SendLowerNibble</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_SendLowerNibble &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[2483750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[2483804]"></a>lcd_BusyCheck</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_BusyCheck &rArr; GPIO_PinRead
</UL>
<BR>[Calls]<UL><LI><a href="#[2487698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRead
<LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[248774c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinDirection
<LI><a href="#[2488f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2483408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CmdWrite
<LI><a href="#[2483750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[24837c8]"></a>lcd_Reset</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lcd_Reset &rArr; lcd_SendHigherNibble &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[248387c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendHigherNibble
<LI><a href="#[24838b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendCmdSignals
<LI><a href="#[2488f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
<LI><a href="#[2488fac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[24833cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[248378c]"></a>lcd_SendDataSignals</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lcd_SendDataSignals &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[2487710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[2488f70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_us
</UL>
<BR>[Called By]<UL><LI><a href="#[2483750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_DataWrite
</UL>

<P><STRONG><a name="[2483750]"></a>lcd_DataWrite</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lcd_DataWrite &rArr; lcd_SendDataSignals &rArr; GPIO_PinWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[248378c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendDataSignals
<LI><a href="#[2483804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_BusyCheck
<LI><a href="#[2483840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendLowerNibble
<LI><a href="#[248387c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_SendHigherNibble
</UL>
<BR>[Called By]<UL><LI><a href="#[24831b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd16x2_put_custom_char
<LI><a href="#[24831ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd16x2_create_custom_char
<LI><a href="#[2483318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayChar
</UL>

<P><STRONG><a name="[248288c]"></a>WDT_SetTimeOut</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, lpc17xx_wdt.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2482cc4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLKPWR_SetPCLKDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[2482490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_UpdateTimeOut
<LI><a href="#[2482544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Start
</UL>

<P><STRONG><a name="[2480f00]"></a>isIntValue</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = isIntValue &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[25264bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2526714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[25268f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
</UL>

<P><STRONG><a name="[2480ec4]"></a>getFRValues</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[2524b30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[2525634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[2525f1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[25262dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[2526da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2526e1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[2527290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[2480e88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFractionValues
</UL>

<P><STRONG><a name="[2480e88]"></a>getFractionValues</STRONG> (Thumb, 388 bytes, Stack size 96 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = getFractionValues &rArr; getFRValues &rArr; __aeabi_dsub
</UL>
<BR>[Calls]<UL><LI><a href="#[2480ec4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFRValues
<LI><a href="#[2480f00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isIntValue
<LI><a href="#[2526048]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[25261b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[25262dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[25264bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[2526714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[2526ad4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2526da4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[2526ed0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2480a14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudRate
</UL>

<P><STRONG><a name="[252e040]"></a>xchg_spi</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[252dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[252de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[252de60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
<LI><a href="#[252df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[252df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[252df8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
</UL>

<P><STRONG><a name="[252e004]"></a>rcvr_spi_multi</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252de60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_datablock
</UL>

<P><STRONG><a name="[252dfc8]"></a>xmit_spi_multi</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
</UL>

<P><STRONG><a name="[252df8c]"></a>wait_ready</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252e040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252de24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_datablock
<LI><a href="#[252df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
</UL>

<P><STRONG><a name="[252df50]"></a>deselect</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252e040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[252d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[252d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[252dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[252de9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off
<LI><a href="#[252df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
</UL>

<P><STRONG><a name="[252df14]"></a>select</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[252df8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[252e040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[252de9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off
</UL>

<P><STRONG><a name="[252ded8]"></a>power_on</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[252de9c]"></a>power_off</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[252df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
</UL>
<BR>[Called By]<UL><LI><a href="#[252d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[252de60]"></a>rcvr_datablock</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252e004]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcvr_spi_multi
<LI><a href="#[252e040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[252de24]"></a>xmit_datablock</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252df8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ready
<LI><a href="#[252dfc8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xmit_spi_multi
<LI><a href="#[252e040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[252dde8]"></a>send_cmd</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[252df14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[252df50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deselect
<LI><a href="#[252e040]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xchg_spi
</UL>
<BR>[Called By]<UL><LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[252d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[252d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[252dde8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
</UL>

<P><STRONG><a name="[252ddac]"></a>vd_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[252dd70]"></a>vd_stat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252d230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>

<P><STRONG><a name="[252dd34]"></a>vd_read</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[252d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[252dcf8]"></a>vd_ioctl</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>
<BR>[Called By]<UL><LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[252dcbc]"></a>put_rc</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2483e58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readconfigfile
<LI><a href="#[252cc90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_SMS
<LI><a href="#[252cccc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;retrylog
<LI><a href="#[252cd44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_list
<LI><a href="#[252cd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
</UL>

<P><STRONG><a name="[252dc80]"></a>scan_files</STRONG> (Thumb, 148 bytes, Stack size 80 bytes, mmc_176x_ssp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2527efc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[25280dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[252c7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[252c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[252dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>
<BR>[Called By]<UL><LI><a href="#[252cd80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_volume_stat
<LI><a href="#[252dc80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[252bd90]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[252ba0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[252bac0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriorities
</UL>

<P><STRONG><a name="[252b430]"></a>ld_word</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[252abfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[252addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[252ae18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
<LI><a href="#[252ae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[252b3f4]"></a>ld_dword</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252aad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[252abfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[252b034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252ca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[252ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[252b3b8]"></a>st_word</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[252ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_lfn
<LI><a href="#[252ae54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[252b034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[252b37c]"></a>st_dword</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[252aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[252b034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252b340]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252a83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[252ad64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252b304]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252a968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_init
<LI><a href="#[252aa1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_partition
<LI><a href="#[252abc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[252af80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252b2c8]"></a>mem_cmp</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252ab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[252acb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[252b28c]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252abc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[252b250]"></a>dbc_1st</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252ad64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[252b1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
</UL>

<P><STRONG><a name="[252b214]"></a>dbc_2nd</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252b1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
</UL>

<P><STRONG><a name="[252b1d8]"></a>tchar2uni</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_oem2uni
<LI><a href="#[252b214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbc_2nd
<LI><a href="#[252b250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbc_1st
</UL>
<BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252abc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[252b19c]"></a>put_utf</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_uni2oem
</UL>
<BR>[Called By]<UL><LI><a href="#[252abfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>

<P><STRONG><a name="[252b160]"></a>sync_window</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[252af80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[252b0e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[252b124]"></a>move_window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[252d1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[252a7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252ab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[252ac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[252acb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[252acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[252aecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[252b034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252ca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[252ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[252b0e8]"></a>sync_fs</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[252b37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[252b3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[252a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252b0ac]"></a>clst2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252a83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252af80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[252b070]"></a>get_fat</STRONG> (Thumb, 332 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[252b430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[252a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_expand
<LI><a href="#[252a788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252afbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[252aff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[252c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[252ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
</UL>

<P><STRONG><a name="[252b034]"></a>put_fat</STRONG> (Thumb, 420 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[252b3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[252b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[252a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_expand
<LI><a href="#[252afbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[252aff8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[252aff8]"></a>remove_chain</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[252a788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252afbc]"></a>create_chain</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b034]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[252a83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
</UL>

<P><STRONG><a name="[252af80]"></a>dir_clear</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
<LI><a href="#[252b160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252af44]"></a>dir_sdi</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252b0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252a7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252ac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[252acb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[252aecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[252c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[252ca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
</UL>

<P><STRONG><a name="[252af08]"></a>dir_next</STRONG> (Thumb, 234 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252af80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_clear
<LI><a href="#[252afbc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[252b070]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[252b0ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clst2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[252a7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[252ac38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[252acb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[252acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[252aecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[252c7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[252aecc]"></a>dir_alloc</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[252ae90]"></a>ld_clust</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[252a7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[252ae54]"></a>st_clust</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
</UL>
<BR>[Called By]<UL><LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252ae18]"></a>cmp_lfn</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[252b430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[252acb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[252addc]"></a>pick_lfn</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[252acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[252ada0]"></a>put_lfn</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
</UL>
<BR>[Called By]<UL><LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[252ad64]"></a>gen_numname</STRONG> (Thumb, 218 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbc_1st
<LI><a href="#[252b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[252ad28]"></a>sum_sfn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[252acb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[252acec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[252acec]"></a>dir_read</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252ad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[252addc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252a7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[252ca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
</UL>

<P><STRONG><a name="[252acb0]"></a>dir_find</STRONG> (Thumb, 262 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252ad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[252ae18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
<LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[252ac74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[252ac74]"></a>dir_register</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252acb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[252ad28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[252ad64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[252ada0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_lfn
<LI><a href="#[252aecc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[252b340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[252ac38]"></a>dir_remove</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252af08]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>

<P><STRONG><a name="[252abfc]"></a>get_fileinfo</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_utf
<LI><a href="#[252b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[252b430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[252a7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[252c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[252c7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[252abc0]"></a>create_name</STRONG> (Thumb, 766 bytes, Stack size 56 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[252a5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_uni2oem
<LI><a href="#[252b1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tchar2uni
<LI><a href="#[252b28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[252ab84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[252ab84]"></a>follow_path</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252abc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[252acb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[252ae90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[252af44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[252a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[252a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[252cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[252ab48]"></a>get_ldnumber</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[252a800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdrive
<LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[252ab0c]"></a>check_fs</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[252b430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
</UL>
<BR>[Called By]<UL><LI><a href="#[252aad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[252aad0]"></a>find_volume</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252ab0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[252b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
</UL>
<BR>[Called By]<UL><LI><a href="#[252aa94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mount_volume
</UL>

<P><STRONG><a name="[252aa94]"></a>mount_volume</STRONG> (Thumb, 910 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252aad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[252ab48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[252b124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[252b3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_dword
<LI><a href="#[252b430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_word
<LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252d230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[252d26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[252a6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_setlabel
<LI><a href="#[252a710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[252a74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[252a7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getcwd
<LI><a href="#[252c6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[252c768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[252c7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[252c894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[252c8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[252c90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[252c984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[252ca38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getlabel
<LI><a href="#[252ca74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[252cb28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chdir
</UL>

<P><STRONG><a name="[252aa58]"></a>validate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252d230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[252a698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_expand
<LI><a href="#[252a788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[252a83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[252c72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[252c7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[252c81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[252c9c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[252cab0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_closedir
<LI><a href="#[252caec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[252aa1c]"></a>create_partition</STRONG> (Thumb, 418 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[252b37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_dword
<LI><a href="#[252b3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_word
<LI><a href="#[252d17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[252d1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[252c948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>

<P><STRONG><a name="[252a9e0]"></a>putc_bfd</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[252a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>
<BR>[Called By]<UL><LI><a href="#[252a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[252a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
<LI><a href="#[252a9e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
<LI><a href="#[252c858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
</UL>

<P><STRONG><a name="[252a9a4]"></a>putc_flush</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252a83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Called By]<UL><LI><a href="#[252a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[252a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
<LI><a href="#[252c858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
</UL>

<P><STRONG><a name="[252a968]"></a>putc_init</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252b304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[252a620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[252a65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_putc
<LI><a href="#[252c858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
</UL>

<P><STRONG><a name="[2526f48]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2526d68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[2526de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[2526f0c]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2526de0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[2526e94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[2525c4c]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2525a6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[2525ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[2525c10]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[2525ae4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[2525b98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[2523690]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
